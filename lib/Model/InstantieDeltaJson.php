<?php
/**
 * InstantieDeltaJson
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product API
 *
 * ### Access  The Product API is a public API. If you want to make use of this api, contact someone on the team to get an API key.  Each endpoint also lists the necessary permissions to call it. You can view your own permissions by calling the `/me` endpoint.   In a few cases some of the listed permissions are optional and depend upon the specific data requested.  ### Tracing  The API uses X-request-ID and X-correlation-ID headers.   Every request that hits the API without these headers, gets a new random UUID as request-ID and correlation-ID.  If you as a client pass these id's yourself, the API will use your values, but only when they are in UUID format.   If you provide a value that is not a UUID, the api will fail to handle your request.  Providing these values enables distributed request correlation & tracing.  ### Rate limiting  GET calls to this API are rate limited.   This rate limit is configured per client. You can request a higher rate limit if needed.  The rate limit uses a token bucket that is refilled within a fixed timeframe.   Each request can use multiple tokens, depending on the number of items requested.  Information about your current limit is conveyed via the response headers of each response:  | Header                | Description                                                                                                    | Example                | |-----------------------|----------------------------------------------------------------------------------------------------------------|------------------------| | X-RateLimit-Reset     | The time at which the rate limit will reset                                                                    | 2025-07-14T15:23:45Z   | | X-RateLimit-Limit     | The maximum number of tokens to be used in the current time window                                             | 2000                   | | X-RateLimit-Remaining | The number of tokens remaining in the current time window                                                      | 670                    | | Retry-After           | Indicates how many seconds the client should wait before making a new request (only when response code is 429) | 42                     |  ### Contact
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: iom@groepen.vlaanderen.be
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InstantieDeltaJson Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class InstantieDeltaJson implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'InstantieDeltaJson';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'bevoegd_bestuursniveaus' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'uitvoerend_bestuursniveaus' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'naam' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'beschrijving' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'verdere_beschrijving' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'start_dienst_verlening' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'einde_dienst_verlening' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'publicatiekanalen' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'cases' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'type' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'tags' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'themas' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'doelgroepen' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'talen' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'geografisch_toepassingsgebieden' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'your_europe_categorieen' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'regelgeving_tekst' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'uitzondering' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'zoektermen' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'aangemaakt_door' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'bevoegde_overheden' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'uitvoerende_overheden' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'contact_overheden' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'contact_beschrijving' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'sociale_kaart_organisaties' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'voorwaarden' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'procedures' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'websites' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'kosten' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'financiele_voordelen' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'regelgeving' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'contactgegevens' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'linked_concept' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'creatie' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'laatst_gewijzigd' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'laatst_ontvangen' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'productnummer' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'gearchiveerd' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'machine_leesbare_voorwaarden' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'subsidiemaatregel' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'publicatie_link' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'metadata' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'verwante_producten' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'deminimis' => '\OpenAPI\Client\Model\FieldDeltaJson',
        'verrijking' => '\OpenAPI\Client\Model\FieldDeltaJson'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'bevoegd_bestuursniveaus' => null,
        'uitvoerend_bestuursniveaus' => null,
        'naam' => null,
        'beschrijving' => null,
        'verdere_beschrijving' => null,
        'start_dienst_verlening' => null,
        'einde_dienst_verlening' => null,
        'publicatiekanalen' => null,
        'cases' => null,
        'type' => null,
        'tags' => null,
        'themas' => null,
        'doelgroepen' => null,
        'talen' => null,
        'geografisch_toepassingsgebieden' => null,
        'your_europe_categorieen' => null,
        'regelgeving_tekst' => null,
        'uitzondering' => null,
        'zoektermen' => null,
        'aangemaakt_door' => null,
        'bevoegde_overheden' => null,
        'uitvoerende_overheden' => null,
        'contact_overheden' => null,
        'contact_beschrijving' => null,
        'sociale_kaart_organisaties' => null,
        'voorwaarden' => null,
        'procedures' => null,
        'websites' => null,
        'kosten' => null,
        'financiele_voordelen' => null,
        'regelgeving' => null,
        'contactgegevens' => null,
        'linked_concept' => null,
        'creatie' => null,
        'laatst_gewijzigd' => null,
        'laatst_ontvangen' => null,
        'productnummer' => null,
        'gearchiveerd' => null,
        'machine_leesbare_voorwaarden' => null,
        'subsidiemaatregel' => null,
        'publicatie_link' => null,
        'metadata' => null,
        'verwante_producten' => null,
        'deminimis' => null,
        'verrijking' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'id' => false,
        'bevoegd_bestuursniveaus' => false,
        'uitvoerend_bestuursniveaus' => false,
        'naam' => false,
        'beschrijving' => false,
        'verdere_beschrijving' => false,
        'start_dienst_verlening' => false,
        'einde_dienst_verlening' => false,
        'publicatiekanalen' => false,
        'cases' => false,
        'type' => false,
        'tags' => false,
        'themas' => false,
        'doelgroepen' => false,
        'talen' => false,
        'geografisch_toepassingsgebieden' => false,
        'your_europe_categorieen' => false,
        'regelgeving_tekst' => false,
        'uitzondering' => false,
        'zoektermen' => false,
        'aangemaakt_door' => false,
        'bevoegde_overheden' => false,
        'uitvoerende_overheden' => false,
        'contact_overheden' => false,
        'contact_beschrijving' => false,
        'sociale_kaart_organisaties' => false,
        'voorwaarden' => false,
        'procedures' => false,
        'websites' => false,
        'kosten' => false,
        'financiele_voordelen' => false,
        'regelgeving' => false,
        'contactgegevens' => false,
        'linked_concept' => false,
        'creatie' => false,
        'laatst_gewijzigd' => false,
        'laatst_ontvangen' => false,
        'productnummer' => false,
        'gearchiveerd' => false,
        'machine_leesbare_voorwaarden' => false,
        'subsidiemaatregel' => false,
        'publicatie_link' => false,
        'metadata' => false,
        'verwante_producten' => false,
        'deminimis' => false,
        'verrijking' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'bevoegd_bestuursniveaus' => 'bevoegdBestuursniveaus',
        'uitvoerend_bestuursniveaus' => 'uitvoerendBestuursniveaus',
        'naam' => 'naam',
        'beschrijving' => 'beschrijving',
        'verdere_beschrijving' => 'verdereBeschrijving',
        'start_dienst_verlening' => 'startDienstVerlening',
        'einde_dienst_verlening' => 'eindeDienstVerlening',
        'publicatiekanalen' => 'publicatiekanalen',
        'cases' => 'cases',
        'type' => 'type',
        'tags' => 'tags',
        'themas' => 'themas',
        'doelgroepen' => 'doelgroepen',
        'talen' => 'talen',
        'geografisch_toepassingsgebieden' => 'geografischToepassingsgebieden',
        'your_europe_categorieen' => 'yourEuropeCategorieen',
        'regelgeving_tekst' => 'regelgevingTekst',
        'uitzondering' => 'uitzondering',
        'zoektermen' => 'zoektermen',
        'aangemaakt_door' => 'aangemaaktDoor',
        'bevoegde_overheden' => 'bevoegdeOverheden',
        'uitvoerende_overheden' => 'uitvoerendeOverheden',
        'contact_overheden' => 'contactOverheden',
        'contact_beschrijving' => 'contactBeschrijving',
        'sociale_kaart_organisaties' => 'socialeKaartOrganisaties',
        'voorwaarden' => 'voorwaarden',
        'procedures' => 'procedures',
        'websites' => 'websites',
        'kosten' => 'kosten',
        'financiele_voordelen' => 'financieleVoordelen',
        'regelgeving' => 'regelgeving',
        'contactgegevens' => 'contactgegevens',
        'linked_concept' => 'linkedConcept',
        'creatie' => 'creatie',
        'laatst_gewijzigd' => 'laatstGewijzigd',
        'laatst_ontvangen' => 'laatstOntvangen',
        'productnummer' => 'productnummer',
        'gearchiveerd' => 'gearchiveerd',
        'machine_leesbare_voorwaarden' => 'machineLeesbareVoorwaarden',
        'subsidiemaatregel' => 'subsidiemaatregel',
        'publicatie_link' => 'publicatieLink',
        'metadata' => 'metadata',
        'verwante_producten' => 'verwanteProducten',
        'deminimis' => 'deminimis',
        'verrijking' => 'verrijking'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'bevoegd_bestuursniveaus' => 'setBevoegdBestuursniveaus',
        'uitvoerend_bestuursniveaus' => 'setUitvoerendBestuursniveaus',
        'naam' => 'setNaam',
        'beschrijving' => 'setBeschrijving',
        'verdere_beschrijving' => 'setVerdereBeschrijving',
        'start_dienst_verlening' => 'setStartDienstVerlening',
        'einde_dienst_verlening' => 'setEindeDienstVerlening',
        'publicatiekanalen' => 'setPublicatiekanalen',
        'cases' => 'setCases',
        'type' => 'setType',
        'tags' => 'setTags',
        'themas' => 'setThemas',
        'doelgroepen' => 'setDoelgroepen',
        'talen' => 'setTalen',
        'geografisch_toepassingsgebieden' => 'setGeografischToepassingsgebieden',
        'your_europe_categorieen' => 'setYourEuropeCategorieen',
        'regelgeving_tekst' => 'setRegelgevingTekst',
        'uitzondering' => 'setUitzondering',
        'zoektermen' => 'setZoektermen',
        'aangemaakt_door' => 'setAangemaaktDoor',
        'bevoegde_overheden' => 'setBevoegdeOverheden',
        'uitvoerende_overheden' => 'setUitvoerendeOverheden',
        'contact_overheden' => 'setContactOverheden',
        'contact_beschrijving' => 'setContactBeschrijving',
        'sociale_kaart_organisaties' => 'setSocialeKaartOrganisaties',
        'voorwaarden' => 'setVoorwaarden',
        'procedures' => 'setProcedures',
        'websites' => 'setWebsites',
        'kosten' => 'setKosten',
        'financiele_voordelen' => 'setFinancieleVoordelen',
        'regelgeving' => 'setRegelgeving',
        'contactgegevens' => 'setContactgegevens',
        'linked_concept' => 'setLinkedConcept',
        'creatie' => 'setCreatie',
        'laatst_gewijzigd' => 'setLaatstGewijzigd',
        'laatst_ontvangen' => 'setLaatstOntvangen',
        'productnummer' => 'setProductnummer',
        'gearchiveerd' => 'setGearchiveerd',
        'machine_leesbare_voorwaarden' => 'setMachineLeesbareVoorwaarden',
        'subsidiemaatregel' => 'setSubsidiemaatregel',
        'publicatie_link' => 'setPublicatieLink',
        'metadata' => 'setMetadata',
        'verwante_producten' => 'setVerwanteProducten',
        'deminimis' => 'setDeminimis',
        'verrijking' => 'setVerrijking'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'bevoegd_bestuursniveaus' => 'getBevoegdBestuursniveaus',
        'uitvoerend_bestuursniveaus' => 'getUitvoerendBestuursniveaus',
        'naam' => 'getNaam',
        'beschrijving' => 'getBeschrijving',
        'verdere_beschrijving' => 'getVerdereBeschrijving',
        'start_dienst_verlening' => 'getStartDienstVerlening',
        'einde_dienst_verlening' => 'getEindeDienstVerlening',
        'publicatiekanalen' => 'getPublicatiekanalen',
        'cases' => 'getCases',
        'type' => 'getType',
        'tags' => 'getTags',
        'themas' => 'getThemas',
        'doelgroepen' => 'getDoelgroepen',
        'talen' => 'getTalen',
        'geografisch_toepassingsgebieden' => 'getGeografischToepassingsgebieden',
        'your_europe_categorieen' => 'getYourEuropeCategorieen',
        'regelgeving_tekst' => 'getRegelgevingTekst',
        'uitzondering' => 'getUitzondering',
        'zoektermen' => 'getZoektermen',
        'aangemaakt_door' => 'getAangemaaktDoor',
        'bevoegde_overheden' => 'getBevoegdeOverheden',
        'uitvoerende_overheden' => 'getUitvoerendeOverheden',
        'contact_overheden' => 'getContactOverheden',
        'contact_beschrijving' => 'getContactBeschrijving',
        'sociale_kaart_organisaties' => 'getSocialeKaartOrganisaties',
        'voorwaarden' => 'getVoorwaarden',
        'procedures' => 'getProcedures',
        'websites' => 'getWebsites',
        'kosten' => 'getKosten',
        'financiele_voordelen' => 'getFinancieleVoordelen',
        'regelgeving' => 'getRegelgeving',
        'contactgegevens' => 'getContactgegevens',
        'linked_concept' => 'getLinkedConcept',
        'creatie' => 'getCreatie',
        'laatst_gewijzigd' => 'getLaatstGewijzigd',
        'laatst_ontvangen' => 'getLaatstOntvangen',
        'productnummer' => 'getProductnummer',
        'gearchiveerd' => 'getGearchiveerd',
        'machine_leesbare_voorwaarden' => 'getMachineLeesbareVoorwaarden',
        'subsidiemaatregel' => 'getSubsidiemaatregel',
        'publicatie_link' => 'getPublicatieLink',
        'metadata' => 'getMetadata',
        'verwante_producten' => 'getVerwanteProducten',
        'deminimis' => 'getDeminimis',
        'verrijking' => 'getVerrijking'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('id', $data ?? [], null);
        $this->setIfExists('bevoegd_bestuursniveaus', $data ?? [], null);
        $this->setIfExists('uitvoerend_bestuursniveaus', $data ?? [], null);
        $this->setIfExists('naam', $data ?? [], null);
        $this->setIfExists('beschrijving', $data ?? [], null);
        $this->setIfExists('verdere_beschrijving', $data ?? [], null);
        $this->setIfExists('start_dienst_verlening', $data ?? [], null);
        $this->setIfExists('einde_dienst_verlening', $data ?? [], null);
        $this->setIfExists('publicatiekanalen', $data ?? [], null);
        $this->setIfExists('cases', $data ?? [], null);
        $this->setIfExists('type', $data ?? [], null);
        $this->setIfExists('tags', $data ?? [], null);
        $this->setIfExists('themas', $data ?? [], null);
        $this->setIfExists('doelgroepen', $data ?? [], null);
        $this->setIfExists('talen', $data ?? [], null);
        $this->setIfExists('geografisch_toepassingsgebieden', $data ?? [], null);
        $this->setIfExists('your_europe_categorieen', $data ?? [], null);
        $this->setIfExists('regelgeving_tekst', $data ?? [], null);
        $this->setIfExists('uitzondering', $data ?? [], null);
        $this->setIfExists('zoektermen', $data ?? [], null);
        $this->setIfExists('aangemaakt_door', $data ?? [], null);
        $this->setIfExists('bevoegde_overheden', $data ?? [], null);
        $this->setIfExists('uitvoerende_overheden', $data ?? [], null);
        $this->setIfExists('contact_overheden', $data ?? [], null);
        $this->setIfExists('contact_beschrijving', $data ?? [], null);
        $this->setIfExists('sociale_kaart_organisaties', $data ?? [], null);
        $this->setIfExists('voorwaarden', $data ?? [], null);
        $this->setIfExists('procedures', $data ?? [], null);
        $this->setIfExists('websites', $data ?? [], null);
        $this->setIfExists('kosten', $data ?? [], null);
        $this->setIfExists('financiele_voordelen', $data ?? [], null);
        $this->setIfExists('regelgeving', $data ?? [], null);
        $this->setIfExists('contactgegevens', $data ?? [], null);
        $this->setIfExists('linked_concept', $data ?? [], null);
        $this->setIfExists('creatie', $data ?? [], null);
        $this->setIfExists('laatst_gewijzigd', $data ?? [], null);
        $this->setIfExists('laatst_ontvangen', $data ?? [], null);
        $this->setIfExists('productnummer', $data ?? [], null);
        $this->setIfExists('gearchiveerd', $data ?? [], null);
        $this->setIfExists('machine_leesbare_voorwaarden', $data ?? [], null);
        $this->setIfExists('subsidiemaatregel', $data ?? [], null);
        $this->setIfExists('publicatie_link', $data ?? [], null);
        $this->setIfExists('metadata', $data ?? [], null);
        $this->setIfExists('verwante_producten', $data ?? [], null);
        $this->setIfExists('deminimis', $data ?? [], null);
        $this->setIfExists('verrijking', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        if (is_null($id)) {
            throw new \InvalidArgumentException('non-nullable id cannot be null');
        }
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets bevoegd_bestuursniveaus
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getBevoegdBestuursniveaus()
    {
        return $this->container['bevoegd_bestuursniveaus'];
    }

    /**
     * Sets bevoegd_bestuursniveaus
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $bevoegd_bestuursniveaus bevoegd_bestuursniveaus
     *
     * @return self
     */
    public function setBevoegdBestuursniveaus($bevoegd_bestuursniveaus)
    {
        if (is_null($bevoegd_bestuursniveaus)) {
            throw new \InvalidArgumentException('non-nullable bevoegd_bestuursniveaus cannot be null');
        }
        $this->container['bevoegd_bestuursniveaus'] = $bevoegd_bestuursniveaus;

        return $this;
    }

    /**
     * Gets uitvoerend_bestuursniveaus
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getUitvoerendBestuursniveaus()
    {
        return $this->container['uitvoerend_bestuursniveaus'];
    }

    /**
     * Sets uitvoerend_bestuursniveaus
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $uitvoerend_bestuursniveaus uitvoerend_bestuursniveaus
     *
     * @return self
     */
    public function setUitvoerendBestuursniveaus($uitvoerend_bestuursniveaus)
    {
        if (is_null($uitvoerend_bestuursniveaus)) {
            throw new \InvalidArgumentException('non-nullable uitvoerend_bestuursniveaus cannot be null');
        }
        $this->container['uitvoerend_bestuursniveaus'] = $uitvoerend_bestuursniveaus;

        return $this;
    }

    /**
     * Gets naam
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getNaam()
    {
        return $this->container['naam'];
    }

    /**
     * Sets naam
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $naam naam
     *
     * @return self
     */
    public function setNaam($naam)
    {
        if (is_null($naam)) {
            throw new \InvalidArgumentException('non-nullable naam cannot be null');
        }
        $this->container['naam'] = $naam;

        return $this;
    }

    /**
     * Gets beschrijving
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getBeschrijving()
    {
        return $this->container['beschrijving'];
    }

    /**
     * Sets beschrijving
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $beschrijving beschrijving
     *
     * @return self
     */
    public function setBeschrijving($beschrijving)
    {
        if (is_null($beschrijving)) {
            throw new \InvalidArgumentException('non-nullable beschrijving cannot be null');
        }
        $this->container['beschrijving'] = $beschrijving;

        return $this;
    }

    /**
     * Gets verdere_beschrijving
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getVerdereBeschrijving()
    {
        return $this->container['verdere_beschrijving'];
    }

    /**
     * Sets verdere_beschrijving
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $verdere_beschrijving verdere_beschrijving
     *
     * @return self
     */
    public function setVerdereBeschrijving($verdere_beschrijving)
    {
        if (is_null($verdere_beschrijving)) {
            throw new \InvalidArgumentException('non-nullable verdere_beschrijving cannot be null');
        }
        $this->container['verdere_beschrijving'] = $verdere_beschrijving;

        return $this;
    }

    /**
     * Gets start_dienst_verlening
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getStartDienstVerlening()
    {
        return $this->container['start_dienst_verlening'];
    }

    /**
     * Sets start_dienst_verlening
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $start_dienst_verlening start_dienst_verlening
     *
     * @return self
     */
    public function setStartDienstVerlening($start_dienst_verlening)
    {
        if (is_null($start_dienst_verlening)) {
            throw new \InvalidArgumentException('non-nullable start_dienst_verlening cannot be null');
        }
        $this->container['start_dienst_verlening'] = $start_dienst_verlening;

        return $this;
    }

    /**
     * Gets einde_dienst_verlening
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getEindeDienstVerlening()
    {
        return $this->container['einde_dienst_verlening'];
    }

    /**
     * Sets einde_dienst_verlening
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $einde_dienst_verlening einde_dienst_verlening
     *
     * @return self
     */
    public function setEindeDienstVerlening($einde_dienst_verlening)
    {
        if (is_null($einde_dienst_verlening)) {
            throw new \InvalidArgumentException('non-nullable einde_dienst_verlening cannot be null');
        }
        $this->container['einde_dienst_verlening'] = $einde_dienst_verlening;

        return $this;
    }

    /**
     * Gets publicatiekanalen
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getPublicatiekanalen()
    {
        return $this->container['publicatiekanalen'];
    }

    /**
     * Sets publicatiekanalen
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $publicatiekanalen publicatiekanalen
     *
     * @return self
     */
    public function setPublicatiekanalen($publicatiekanalen)
    {
        if (is_null($publicatiekanalen)) {
            throw new \InvalidArgumentException('non-nullable publicatiekanalen cannot be null');
        }
        $this->container['publicatiekanalen'] = $publicatiekanalen;

        return $this;
    }

    /**
     * Gets cases
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getCases()
    {
        return $this->container['cases'];
    }

    /**
     * Sets cases
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $cases cases
     *
     * @return self
     */
    public function setCases($cases)
    {
        if (is_null($cases)) {
            throw new \InvalidArgumentException('non-nullable cases cannot be null');
        }
        $this->container['cases'] = $cases;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        if (is_null($type)) {
            throw new \InvalidArgumentException('non-nullable type cannot be null');
        }
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        if (is_null($tags)) {
            throw new \InvalidArgumentException('non-nullable tags cannot be null');
        }
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets themas
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getThemas()
    {
        return $this->container['themas'];
    }

    /**
     * Sets themas
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $themas themas
     *
     * @return self
     */
    public function setThemas($themas)
    {
        if (is_null($themas)) {
            throw new \InvalidArgumentException('non-nullable themas cannot be null');
        }
        $this->container['themas'] = $themas;

        return $this;
    }

    /**
     * Gets doelgroepen
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getDoelgroepen()
    {
        return $this->container['doelgroepen'];
    }

    /**
     * Sets doelgroepen
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $doelgroepen doelgroepen
     *
     * @return self
     */
    public function setDoelgroepen($doelgroepen)
    {
        if (is_null($doelgroepen)) {
            throw new \InvalidArgumentException('non-nullable doelgroepen cannot be null');
        }
        $this->container['doelgroepen'] = $doelgroepen;

        return $this;
    }

    /**
     * Gets talen
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getTalen()
    {
        return $this->container['talen'];
    }

    /**
     * Sets talen
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $talen talen
     *
     * @return self
     */
    public function setTalen($talen)
    {
        if (is_null($talen)) {
            throw new \InvalidArgumentException('non-nullable talen cannot be null');
        }
        $this->container['talen'] = $talen;

        return $this;
    }

    /**
     * Gets geografisch_toepassingsgebieden
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getGeografischToepassingsgebieden()
    {
        return $this->container['geografisch_toepassingsgebieden'];
    }

    /**
     * Sets geografisch_toepassingsgebieden
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $geografisch_toepassingsgebieden geografisch_toepassingsgebieden
     *
     * @return self
     */
    public function setGeografischToepassingsgebieden($geografisch_toepassingsgebieden)
    {
        if (is_null($geografisch_toepassingsgebieden)) {
            throw new \InvalidArgumentException('non-nullable geografisch_toepassingsgebieden cannot be null');
        }
        $this->container['geografisch_toepassingsgebieden'] = $geografisch_toepassingsgebieden;

        return $this;
    }

    /**
     * Gets your_europe_categorieen
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getYourEuropeCategorieen()
    {
        return $this->container['your_europe_categorieen'];
    }

    /**
     * Sets your_europe_categorieen
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $your_europe_categorieen your_europe_categorieen
     *
     * @return self
     */
    public function setYourEuropeCategorieen($your_europe_categorieen)
    {
        if (is_null($your_europe_categorieen)) {
            throw new \InvalidArgumentException('non-nullable your_europe_categorieen cannot be null');
        }
        $this->container['your_europe_categorieen'] = $your_europe_categorieen;

        return $this;
    }

    /**
     * Gets regelgeving_tekst
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getRegelgevingTekst()
    {
        return $this->container['regelgeving_tekst'];
    }

    /**
     * Sets regelgeving_tekst
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $regelgeving_tekst regelgeving_tekst
     *
     * @return self
     */
    public function setRegelgevingTekst($regelgeving_tekst)
    {
        if (is_null($regelgeving_tekst)) {
            throw new \InvalidArgumentException('non-nullable regelgeving_tekst cannot be null');
        }
        $this->container['regelgeving_tekst'] = $regelgeving_tekst;

        return $this;
    }

    /**
     * Gets uitzondering
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getUitzondering()
    {
        return $this->container['uitzondering'];
    }

    /**
     * Sets uitzondering
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $uitzondering uitzondering
     *
     * @return self
     */
    public function setUitzondering($uitzondering)
    {
        if (is_null($uitzondering)) {
            throw new \InvalidArgumentException('non-nullable uitzondering cannot be null');
        }
        $this->container['uitzondering'] = $uitzondering;

        return $this;
    }

    /**
     * Gets zoektermen
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getZoektermen()
    {
        return $this->container['zoektermen'];
    }

    /**
     * Sets zoektermen
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $zoektermen zoektermen
     *
     * @return self
     */
    public function setZoektermen($zoektermen)
    {
        if (is_null($zoektermen)) {
            throw new \InvalidArgumentException('non-nullable zoektermen cannot be null');
        }
        $this->container['zoektermen'] = $zoektermen;

        return $this;
    }

    /**
     * Gets aangemaakt_door
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getAangemaaktDoor()
    {
        return $this->container['aangemaakt_door'];
    }

    /**
     * Sets aangemaakt_door
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $aangemaakt_door aangemaakt_door
     *
     * @return self
     */
    public function setAangemaaktDoor($aangemaakt_door)
    {
        if (is_null($aangemaakt_door)) {
            throw new \InvalidArgumentException('non-nullable aangemaakt_door cannot be null');
        }
        $this->container['aangemaakt_door'] = $aangemaakt_door;

        return $this;
    }

    /**
     * Gets bevoegde_overheden
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getBevoegdeOverheden()
    {
        return $this->container['bevoegde_overheden'];
    }

    /**
     * Sets bevoegde_overheden
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $bevoegde_overheden bevoegde_overheden
     *
     * @return self
     */
    public function setBevoegdeOverheden($bevoegde_overheden)
    {
        if (is_null($bevoegde_overheden)) {
            throw new \InvalidArgumentException('non-nullable bevoegde_overheden cannot be null');
        }
        $this->container['bevoegde_overheden'] = $bevoegde_overheden;

        return $this;
    }

    /**
     * Gets uitvoerende_overheden
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getUitvoerendeOverheden()
    {
        return $this->container['uitvoerende_overheden'];
    }

    /**
     * Sets uitvoerende_overheden
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $uitvoerende_overheden uitvoerende_overheden
     *
     * @return self
     */
    public function setUitvoerendeOverheden($uitvoerende_overheden)
    {
        if (is_null($uitvoerende_overheden)) {
            throw new \InvalidArgumentException('non-nullable uitvoerende_overheden cannot be null');
        }
        $this->container['uitvoerende_overheden'] = $uitvoerende_overheden;

        return $this;
    }

    /**
     * Gets contact_overheden
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getContactOverheden()
    {
        return $this->container['contact_overheden'];
    }

    /**
     * Sets contact_overheden
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $contact_overheden contact_overheden
     *
     * @return self
     */
    public function setContactOverheden($contact_overheden)
    {
        if (is_null($contact_overheden)) {
            throw new \InvalidArgumentException('non-nullable contact_overheden cannot be null');
        }
        $this->container['contact_overheden'] = $contact_overheden;

        return $this;
    }

    /**
     * Gets contact_beschrijving
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getContactBeschrijving()
    {
        return $this->container['contact_beschrijving'];
    }

    /**
     * Sets contact_beschrijving
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $contact_beschrijving contact_beschrijving
     *
     * @return self
     */
    public function setContactBeschrijving($contact_beschrijving)
    {
        if (is_null($contact_beschrijving)) {
            throw new \InvalidArgumentException('non-nullable contact_beschrijving cannot be null');
        }
        $this->container['contact_beschrijving'] = $contact_beschrijving;

        return $this;
    }

    /**
     * Gets sociale_kaart_organisaties
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getSocialeKaartOrganisaties()
    {
        return $this->container['sociale_kaart_organisaties'];
    }

    /**
     * Sets sociale_kaart_organisaties
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $sociale_kaart_organisaties sociale_kaart_organisaties
     *
     * @return self
     */
    public function setSocialeKaartOrganisaties($sociale_kaart_organisaties)
    {
        if (is_null($sociale_kaart_organisaties)) {
            throw new \InvalidArgumentException('non-nullable sociale_kaart_organisaties cannot be null');
        }
        $this->container['sociale_kaart_organisaties'] = $sociale_kaart_organisaties;

        return $this;
    }

    /**
     * Gets voorwaarden
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getVoorwaarden()
    {
        return $this->container['voorwaarden'];
    }

    /**
     * Sets voorwaarden
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $voorwaarden voorwaarden
     *
     * @return self
     */
    public function setVoorwaarden($voorwaarden)
    {
        if (is_null($voorwaarden)) {
            throw new \InvalidArgumentException('non-nullable voorwaarden cannot be null');
        }
        $this->container['voorwaarden'] = $voorwaarden;

        return $this;
    }

    /**
     * Gets procedures
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getProcedures()
    {
        return $this->container['procedures'];
    }

    /**
     * Sets procedures
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $procedures procedures
     *
     * @return self
     */
    public function setProcedures($procedures)
    {
        if (is_null($procedures)) {
            throw new \InvalidArgumentException('non-nullable procedures cannot be null');
        }
        $this->container['procedures'] = $procedures;

        return $this;
    }

    /**
     * Gets websites
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getWebsites()
    {
        return $this->container['websites'];
    }

    /**
     * Sets websites
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $websites websites
     *
     * @return self
     */
    public function setWebsites($websites)
    {
        if (is_null($websites)) {
            throw new \InvalidArgumentException('non-nullable websites cannot be null');
        }
        $this->container['websites'] = $websites;

        return $this;
    }

    /**
     * Gets kosten
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getKosten()
    {
        return $this->container['kosten'];
    }

    /**
     * Sets kosten
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $kosten kosten
     *
     * @return self
     */
    public function setKosten($kosten)
    {
        if (is_null($kosten)) {
            throw new \InvalidArgumentException('non-nullable kosten cannot be null');
        }
        $this->container['kosten'] = $kosten;

        return $this;
    }

    /**
     * Gets financiele_voordelen
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getFinancieleVoordelen()
    {
        return $this->container['financiele_voordelen'];
    }

    /**
     * Sets financiele_voordelen
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $financiele_voordelen financiele_voordelen
     *
     * @return self
     */
    public function setFinancieleVoordelen($financiele_voordelen)
    {
        if (is_null($financiele_voordelen)) {
            throw new \InvalidArgumentException('non-nullable financiele_voordelen cannot be null');
        }
        $this->container['financiele_voordelen'] = $financiele_voordelen;

        return $this;
    }

    /**
     * Gets regelgeving
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getRegelgeving()
    {
        return $this->container['regelgeving'];
    }

    /**
     * Sets regelgeving
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $regelgeving regelgeving
     *
     * @return self
     */
    public function setRegelgeving($regelgeving)
    {
        if (is_null($regelgeving)) {
            throw new \InvalidArgumentException('non-nullable regelgeving cannot be null');
        }
        $this->container['regelgeving'] = $regelgeving;

        return $this;
    }

    /**
     * Gets contactgegevens
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getContactgegevens()
    {
        return $this->container['contactgegevens'];
    }

    /**
     * Sets contactgegevens
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $contactgegevens contactgegevens
     *
     * @return self
     */
    public function setContactgegevens($contactgegevens)
    {
        if (is_null($contactgegevens)) {
            throw new \InvalidArgumentException('non-nullable contactgegevens cannot be null');
        }
        $this->container['contactgegevens'] = $contactgegevens;

        return $this;
    }

    /**
     * Gets linked_concept
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getLinkedConcept()
    {
        return $this->container['linked_concept'];
    }

    /**
     * Sets linked_concept
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $linked_concept linked_concept
     *
     * @return self
     */
    public function setLinkedConcept($linked_concept)
    {
        if (is_null($linked_concept)) {
            throw new \InvalidArgumentException('non-nullable linked_concept cannot be null');
        }
        $this->container['linked_concept'] = $linked_concept;

        return $this;
    }

    /**
     * Gets creatie
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getCreatie()
    {
        return $this->container['creatie'];
    }

    /**
     * Sets creatie
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $creatie creatie
     *
     * @return self
     */
    public function setCreatie($creatie)
    {
        if (is_null($creatie)) {
            throw new \InvalidArgumentException('non-nullable creatie cannot be null');
        }
        $this->container['creatie'] = $creatie;

        return $this;
    }

    /**
     * Gets laatst_gewijzigd
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getLaatstGewijzigd()
    {
        return $this->container['laatst_gewijzigd'];
    }

    /**
     * Sets laatst_gewijzigd
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $laatst_gewijzigd laatst_gewijzigd
     *
     * @return self
     */
    public function setLaatstGewijzigd($laatst_gewijzigd)
    {
        if (is_null($laatst_gewijzigd)) {
            throw new \InvalidArgumentException('non-nullable laatst_gewijzigd cannot be null');
        }
        $this->container['laatst_gewijzigd'] = $laatst_gewijzigd;

        return $this;
    }

    /**
     * Gets laatst_ontvangen
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getLaatstOntvangen()
    {
        return $this->container['laatst_ontvangen'];
    }

    /**
     * Sets laatst_ontvangen
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $laatst_ontvangen laatst_ontvangen
     *
     * @return self
     */
    public function setLaatstOntvangen($laatst_ontvangen)
    {
        if (is_null($laatst_ontvangen)) {
            throw new \InvalidArgumentException('non-nullable laatst_ontvangen cannot be null');
        }
        $this->container['laatst_ontvangen'] = $laatst_ontvangen;

        return $this;
    }

    /**
     * Gets productnummer
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getProductnummer()
    {
        return $this->container['productnummer'];
    }

    /**
     * Sets productnummer
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $productnummer productnummer
     *
     * @return self
     */
    public function setProductnummer($productnummer)
    {
        if (is_null($productnummer)) {
            throw new \InvalidArgumentException('non-nullable productnummer cannot be null');
        }
        $this->container['productnummer'] = $productnummer;

        return $this;
    }

    /**
     * Gets gearchiveerd
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getGearchiveerd()
    {
        return $this->container['gearchiveerd'];
    }

    /**
     * Sets gearchiveerd
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $gearchiveerd gearchiveerd
     *
     * @return self
     */
    public function setGearchiveerd($gearchiveerd)
    {
        if (is_null($gearchiveerd)) {
            throw new \InvalidArgumentException('non-nullable gearchiveerd cannot be null');
        }
        $this->container['gearchiveerd'] = $gearchiveerd;

        return $this;
    }

    /**
     * Gets machine_leesbare_voorwaarden
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getMachineLeesbareVoorwaarden()
    {
        return $this->container['machine_leesbare_voorwaarden'];
    }

    /**
     * Sets machine_leesbare_voorwaarden
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $machine_leesbare_voorwaarden machine_leesbare_voorwaarden
     *
     * @return self
     */
    public function setMachineLeesbareVoorwaarden($machine_leesbare_voorwaarden)
    {
        if (is_null($machine_leesbare_voorwaarden)) {
            throw new \InvalidArgumentException('non-nullable machine_leesbare_voorwaarden cannot be null');
        }
        $this->container['machine_leesbare_voorwaarden'] = $machine_leesbare_voorwaarden;

        return $this;
    }

    /**
     * Gets subsidiemaatregel
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getSubsidiemaatregel()
    {
        return $this->container['subsidiemaatregel'];
    }

    /**
     * Sets subsidiemaatregel
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $subsidiemaatregel subsidiemaatregel
     *
     * @return self
     */
    public function setSubsidiemaatregel($subsidiemaatregel)
    {
        if (is_null($subsidiemaatregel)) {
            throw new \InvalidArgumentException('non-nullable subsidiemaatregel cannot be null');
        }
        $this->container['subsidiemaatregel'] = $subsidiemaatregel;

        return $this;
    }

    /**
     * Gets publicatie_link
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getPublicatieLink()
    {
        return $this->container['publicatie_link'];
    }

    /**
     * Sets publicatie_link
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $publicatie_link publicatie_link
     *
     * @return self
     */
    public function setPublicatieLink($publicatie_link)
    {
        if (is_null($publicatie_link)) {
            throw new \InvalidArgumentException('non-nullable publicatie_link cannot be null');
        }
        $this->container['publicatie_link'] = $publicatie_link;

        return $this;
    }

    /**
     * Gets metadata
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getMetadata()
    {
        return $this->container['metadata'];
    }

    /**
     * Sets metadata
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $metadata metadata
     *
     * @return self
     */
    public function setMetadata($metadata)
    {
        if (is_null($metadata)) {
            throw new \InvalidArgumentException('non-nullable metadata cannot be null');
        }
        $this->container['metadata'] = $metadata;

        return $this;
    }

    /**
     * Gets verwante_producten
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getVerwanteProducten()
    {
        return $this->container['verwante_producten'];
    }

    /**
     * Sets verwante_producten
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $verwante_producten verwante_producten
     *
     * @return self
     */
    public function setVerwanteProducten($verwante_producten)
    {
        if (is_null($verwante_producten)) {
            throw new \InvalidArgumentException('non-nullable verwante_producten cannot be null');
        }
        $this->container['verwante_producten'] = $verwante_producten;

        return $this;
    }

    /**
     * Gets deminimis
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getDeminimis()
    {
        return $this->container['deminimis'];
    }

    /**
     * Sets deminimis
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $deminimis deminimis
     *
     * @return self
     */
    public function setDeminimis($deminimis)
    {
        if (is_null($deminimis)) {
            throw new \InvalidArgumentException('non-nullable deminimis cannot be null');
        }
        $this->container['deminimis'] = $deminimis;

        return $this;
    }

    /**
     * Gets verrijking
     *
     * @return \OpenAPI\Client\Model\FieldDeltaJson|null
     */
    public function getVerrijking()
    {
        return $this->container['verrijking'];
    }

    /**
     * Sets verrijking
     *
     * @param \OpenAPI\Client\Model\FieldDeltaJson|null $verrijking verrijking
     *
     * @return self
     */
    public function setVerrijking($verrijking)
    {
        if (is_null($verrijking)) {
            throw new \InvalidArgumentException('non-nullable verrijking cannot be null');
        }
        $this->container['verrijking'] = $verrijking;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


