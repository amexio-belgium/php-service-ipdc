<?php
/**
 * ProductJson
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product API
 *
 * ### Access  The Product API is a public API. If you want to make use of this api, contact someone on the team to get an API key.  Each endpoint also lists the necessary permissions to call it. You can view your own permissions by calling the `/me` endpoint.   In a few cases some of the listed permissions are optional and depend upon the specific data requested.  ### Tracing  The API uses X-request-ID and X-correlation-ID headers.   Every request that hits the API without these headers, gets a new random UUID as request-ID and correlation-ID.  If you as a client pass these id's yourself, the API will use your values, but only when they are in UUID format.   If you provide a value that is not a UUID, the api will fail to handle your request.  Providing these values enables distributed request correlation & tracing.  ### Rate limiting  GET calls to this API are rate limited.   This rate limit is configured per client. You can request a higher rate limit if needed.  The rate limit uses a token bucket that is refilled within a fixed timeframe.   Each request can use multiple tokens, depending on the number of items requested.  Information about your current limit is conveyed via the response headers of each response:  | Header                | Description                                                                                                    | Example                | |-----------------------|----------------------------------------------------------------------------------------------------------------|------------------------| | X-RateLimit-Reset     | The time at which the rate limit will reset                                                                    | 2025-07-14T15:23:45Z   | | X-RateLimit-Limit     | The maximum number of tokens to be used in the current time window                                             | 2000                   | | X-RateLimit-Remaining | The number of tokens remaining in the current time window                                                      | 670                    | | Retry-After           | Indicates how many seconds the client should wait before making a new request (only when response code is 429) | 42                     |  ### Contact
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: iom@groepen.vlaanderen.be
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ProductJson Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ProductJson implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ProductJson';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'at_context' => 'string[]',
        'at_id' => 'string',
        'at_type' => 'string',
        'bevoegd_bestuursniveaus' => 'object[]',
        'uitvoerend_bestuursniveaus' => 'object[]',
        'naam' => 'object',
        'beschrijving' => 'object',
        'verdere_beschrijving' => 'object',
        'start_dienst_verlening' => '\DateTime',
        'einde_dienst_verlening' => '\DateTime',
        'publicatiekanalen' => 'object[]',
        'cases' => '\OpenAPI\Client\Model\CaseId[]',
        'type' => 'object',
        'tags' => 'object[]',
        'themas' => 'object[]',
        'doelgroepen' => 'object[]',
        'talen' => 'object[]',
        'geografisch_toepassingsgebieden' => 'object[]',
        'your_europe_categorieen' => 'object[]',
        'regelgeving_tekst' => 'object',
        'uitzonderingen' => 'object',
        'aangemaakt_door' => '\OpenAPI\Client\Model\PubliekeOrganisatieJson',
        'zoektermen' => 'object',
        'bevoegde_overheden' => '\OpenAPI\Client\Model\PubliekeOrganisatieJson[]',
        'uitvoerende_overheden' => '\OpenAPI\Client\Model\PubliekeOrganisatieJson[]',
        'contact_overheden' => '\OpenAPI\Client\Model\ContactOrganisatieJson[]',
        'contact_beschrijving' => 'object',
        'sociale_kaart_organisaties' => '\OpenAPI\Client\Model\SocialeKaartOrganisatie[]',
        'voorwaarden' => '\OpenAPI\Client\Model\ShaclOrderedJsonLdTypedVoorwaardeJson[]',
        'procedures' => '\OpenAPI\Client\Model\ShaclOrderedJsonLdTypedProcedureJson[]',
        'websites' => '\OpenAPI\Client\Model\ShaclOrderedJsonLdTypedWebsite[]',
        'kosten' => '\OpenAPI\Client\Model\ShaclOrderedJsonLdTypedKost[]',
        'financiele_voordelen' => '\OpenAPI\Client\Model\ShaclOrderedJsonLdTypedFinancieelVoordeel[]',
        'regelgeving' => '\OpenAPI\Client\Model\ShaclOrderedJsonLdTypedRegelgevingJson[]',
        'contactgegevens' => '\OpenAPI\Client\Model\ShaclOrderedJsonLdTypedContactgegevensJson[]',
        'creatie' => '\DateTime',
        'laatst_gewijzigd' => '\DateTime',
        'laatst_ontvangen' => '\DateTime',
        'linked_concept' => 'string',
        'linked_concept_id' => 'object',
        'linked_concept_productnummer' => 'string',
        'productnummer' => 'object',
        'gearchiveerd' => 'bool',
        'machine_leesbare_voorwaarden' => '\OpenAPI\Client\Model\VoorwaardenSetJson[]',
        'verrijking' => 'array<string,array<string,\OpenAPI\Client\Model\VerrijkingVoorwaardeOptieId[]>>',
        'subsidiemaatregel' => 'string',
        'publicatie_link' => '\OpenAPI\Client\Model\Website',
        'metadata' => '\OpenAPI\Client\Model\ProductMetadataJson',
        'verwante_producten' => '\OpenAPI\Client\Model\ShaclOrderedVerwantProduct[]',
        'deminimis' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'at_context' => 'uri',
        'at_id' => 'uri',
        'at_type' => null,
        'bevoegd_bestuursniveaus' => null,
        'uitvoerend_bestuursniveaus' => null,
        'naam' => null,
        'beschrijving' => null,
        'verdere_beschrijving' => null,
        'start_dienst_verlening' => 'date-time',
        'einde_dienst_verlening' => 'date-time',
        'publicatiekanalen' => null,
        'cases' => null,
        'type' => null,
        'tags' => null,
        'themas' => null,
        'doelgroepen' => null,
        'talen' => null,
        'geografisch_toepassingsgebieden' => null,
        'your_europe_categorieen' => null,
        'regelgeving_tekst' => null,
        'uitzonderingen' => null,
        'aangemaakt_door' => null,
        'zoektermen' => null,
        'bevoegde_overheden' => null,
        'uitvoerende_overheden' => null,
        'contact_overheden' => null,
        'contact_beschrijving' => null,
        'sociale_kaart_organisaties' => null,
        'voorwaarden' => null,
        'procedures' => null,
        'websites' => null,
        'kosten' => null,
        'financiele_voordelen' => null,
        'regelgeving' => null,
        'contactgegevens' => null,
        'creatie' => 'date-time',
        'laatst_gewijzigd' => 'date-time',
        'laatst_ontvangen' => 'date-time',
        'linked_concept' => 'uri',
        'linked_concept_id' => 'uuid',
        'linked_concept_productnummer' => null,
        'productnummer' => null,
        'gearchiveerd' => null,
        'machine_leesbare_voorwaarden' => null,
        'verrijking' => null,
        'subsidiemaatregel' => null,
        'publicatie_link' => null,
        'metadata' => null,
        'verwante_producten' => null,
        'deminimis' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'id' => false,
        'at_context' => false,
        'at_id' => false,
        'at_type' => false,
        'bevoegd_bestuursniveaus' => false,
        'uitvoerend_bestuursniveaus' => false,
        'naam' => false,
        'beschrijving' => false,
        'verdere_beschrijving' => false,
        'start_dienst_verlening' => false,
        'einde_dienst_verlening' => false,
        'publicatiekanalen' => false,
        'cases' => false,
        'type' => false,
        'tags' => false,
        'themas' => false,
        'doelgroepen' => false,
        'talen' => false,
        'geografisch_toepassingsgebieden' => false,
        'your_europe_categorieen' => false,
        'regelgeving_tekst' => false,
        'uitzonderingen' => false,
        'aangemaakt_door' => false,
        'zoektermen' => false,
        'bevoegde_overheden' => false,
        'uitvoerende_overheden' => false,
        'contact_overheden' => false,
        'contact_beschrijving' => false,
        'sociale_kaart_organisaties' => false,
        'voorwaarden' => false,
        'procedures' => false,
        'websites' => false,
        'kosten' => false,
        'financiele_voordelen' => false,
        'regelgeving' => false,
        'contactgegevens' => false,
        'creatie' => false,
        'laatst_gewijzigd' => false,
        'laatst_ontvangen' => false,
        'linked_concept' => false,
        'linked_concept_id' => false,
        'linked_concept_productnummer' => false,
        'productnummer' => false,
        'gearchiveerd' => false,
        'machine_leesbare_voorwaarden' => false,
        'verrijking' => false,
        'subsidiemaatregel' => false,
        'publicatie_link' => false,
        'metadata' => false,
        'verwante_producten' => false,
        'deminimis' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'at_context' => '@context',
        'at_id' => '@id',
        'at_type' => '@type',
        'bevoegd_bestuursniveaus' => 'bevoegdBestuursniveaus',
        'uitvoerend_bestuursniveaus' => 'uitvoerendBestuursniveaus',
        'naam' => 'naam',
        'beschrijving' => 'beschrijving',
        'verdere_beschrijving' => 'verdereBeschrijving',
        'start_dienst_verlening' => 'startDienstVerlening',
        'einde_dienst_verlening' => 'eindeDienstVerlening',
        'publicatiekanalen' => 'publicatiekanalen',
        'cases' => 'cases',
        'type' => 'type',
        'tags' => 'tags',
        'themas' => 'themas',
        'doelgroepen' => 'doelgroepen',
        'talen' => 'talen',
        'geografisch_toepassingsgebieden' => 'geografischToepassingsgebieden',
        'your_europe_categorieen' => 'yourEuropeCategorieen',
        'regelgeving_tekst' => 'regelgevingTekst',
        'uitzonderingen' => 'uitzonderingen',
        'aangemaakt_door' => 'aangemaaktDoor',
        'zoektermen' => 'zoektermen',
        'bevoegde_overheden' => 'bevoegdeOverheden',
        'uitvoerende_overheden' => 'uitvoerendeOverheden',
        'contact_overheden' => 'contactOverheden',
        'contact_beschrijving' => 'contactBeschrijving',
        'sociale_kaart_organisaties' => 'socialeKaartOrganisaties',
        'voorwaarden' => 'voorwaarden',
        'procedures' => 'procedures',
        'websites' => 'websites',
        'kosten' => 'kosten',
        'financiele_voordelen' => 'financieleVoordelen',
        'regelgeving' => 'regelgeving',
        'contactgegevens' => 'contactgegevens',
        'creatie' => 'creatie',
        'laatst_gewijzigd' => 'laatstGewijzigd',
        'laatst_ontvangen' => 'laatstOntvangen',
        'linked_concept' => 'linkedConcept',
        'linked_concept_id' => 'linkedConceptId',
        'linked_concept_productnummer' => 'linkedConceptProductnummer',
        'productnummer' => 'productnummer',
        'gearchiveerd' => 'gearchiveerd',
        'machine_leesbare_voorwaarden' => 'machineLeesbareVoorwaarden',
        'verrijking' => 'verrijking',
        'subsidiemaatregel' => 'subsidiemaatregel',
        'publicatie_link' => 'publicatieLink',
        'metadata' => 'metadata',
        'verwante_producten' => 'verwanteProducten',
        'deminimis' => 'deminimis'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'at_context' => 'setAtContext',
        'at_id' => 'setAtId',
        'at_type' => 'setAtType',
        'bevoegd_bestuursniveaus' => 'setBevoegdBestuursniveaus',
        'uitvoerend_bestuursniveaus' => 'setUitvoerendBestuursniveaus',
        'naam' => 'setNaam',
        'beschrijving' => 'setBeschrijving',
        'verdere_beschrijving' => 'setVerdereBeschrijving',
        'start_dienst_verlening' => 'setStartDienstVerlening',
        'einde_dienst_verlening' => 'setEindeDienstVerlening',
        'publicatiekanalen' => 'setPublicatiekanalen',
        'cases' => 'setCases',
        'type' => 'setType',
        'tags' => 'setTags',
        'themas' => 'setThemas',
        'doelgroepen' => 'setDoelgroepen',
        'talen' => 'setTalen',
        'geografisch_toepassingsgebieden' => 'setGeografischToepassingsgebieden',
        'your_europe_categorieen' => 'setYourEuropeCategorieen',
        'regelgeving_tekst' => 'setRegelgevingTekst',
        'uitzonderingen' => 'setUitzonderingen',
        'aangemaakt_door' => 'setAangemaaktDoor',
        'zoektermen' => 'setZoektermen',
        'bevoegde_overheden' => 'setBevoegdeOverheden',
        'uitvoerende_overheden' => 'setUitvoerendeOverheden',
        'contact_overheden' => 'setContactOverheden',
        'contact_beschrijving' => 'setContactBeschrijving',
        'sociale_kaart_organisaties' => 'setSocialeKaartOrganisaties',
        'voorwaarden' => 'setVoorwaarden',
        'procedures' => 'setProcedures',
        'websites' => 'setWebsites',
        'kosten' => 'setKosten',
        'financiele_voordelen' => 'setFinancieleVoordelen',
        'regelgeving' => 'setRegelgeving',
        'contactgegevens' => 'setContactgegevens',
        'creatie' => 'setCreatie',
        'laatst_gewijzigd' => 'setLaatstGewijzigd',
        'laatst_ontvangen' => 'setLaatstOntvangen',
        'linked_concept' => 'setLinkedConcept',
        'linked_concept_id' => 'setLinkedConceptId',
        'linked_concept_productnummer' => 'setLinkedConceptProductnummer',
        'productnummer' => 'setProductnummer',
        'gearchiveerd' => 'setGearchiveerd',
        'machine_leesbare_voorwaarden' => 'setMachineLeesbareVoorwaarden',
        'verrijking' => 'setVerrijking',
        'subsidiemaatregel' => 'setSubsidiemaatregel',
        'publicatie_link' => 'setPublicatieLink',
        'metadata' => 'setMetadata',
        'verwante_producten' => 'setVerwanteProducten',
        'deminimis' => 'setDeminimis'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'at_context' => 'getAtContext',
        'at_id' => 'getAtId',
        'at_type' => 'getAtType',
        'bevoegd_bestuursniveaus' => 'getBevoegdBestuursniveaus',
        'uitvoerend_bestuursniveaus' => 'getUitvoerendBestuursniveaus',
        'naam' => 'getNaam',
        'beschrijving' => 'getBeschrijving',
        'verdere_beschrijving' => 'getVerdereBeschrijving',
        'start_dienst_verlening' => 'getStartDienstVerlening',
        'einde_dienst_verlening' => 'getEindeDienstVerlening',
        'publicatiekanalen' => 'getPublicatiekanalen',
        'cases' => 'getCases',
        'type' => 'getType',
        'tags' => 'getTags',
        'themas' => 'getThemas',
        'doelgroepen' => 'getDoelgroepen',
        'talen' => 'getTalen',
        'geografisch_toepassingsgebieden' => 'getGeografischToepassingsgebieden',
        'your_europe_categorieen' => 'getYourEuropeCategorieen',
        'regelgeving_tekst' => 'getRegelgevingTekst',
        'uitzonderingen' => 'getUitzonderingen',
        'aangemaakt_door' => 'getAangemaaktDoor',
        'zoektermen' => 'getZoektermen',
        'bevoegde_overheden' => 'getBevoegdeOverheden',
        'uitvoerende_overheden' => 'getUitvoerendeOverheden',
        'contact_overheden' => 'getContactOverheden',
        'contact_beschrijving' => 'getContactBeschrijving',
        'sociale_kaart_organisaties' => 'getSocialeKaartOrganisaties',
        'voorwaarden' => 'getVoorwaarden',
        'procedures' => 'getProcedures',
        'websites' => 'getWebsites',
        'kosten' => 'getKosten',
        'financiele_voordelen' => 'getFinancieleVoordelen',
        'regelgeving' => 'getRegelgeving',
        'contactgegevens' => 'getContactgegevens',
        'creatie' => 'getCreatie',
        'laatst_gewijzigd' => 'getLaatstGewijzigd',
        'laatst_ontvangen' => 'getLaatstOntvangen',
        'linked_concept' => 'getLinkedConcept',
        'linked_concept_id' => 'getLinkedConceptId',
        'linked_concept_productnummer' => 'getLinkedConceptProductnummer',
        'productnummer' => 'getProductnummer',
        'gearchiveerd' => 'getGearchiveerd',
        'machine_leesbare_voorwaarden' => 'getMachineLeesbareVoorwaarden',
        'verrijking' => 'getVerrijking',
        'subsidiemaatregel' => 'getSubsidiemaatregel',
        'publicatie_link' => 'getPublicatieLink',
        'metadata' => 'getMetadata',
        'verwante_producten' => 'getVerwanteProducten',
        'deminimis' => 'getDeminimis'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    public const BEVOEGD_BESTUURSNIVEAUS_EUROPEES = 'Europees';
    public const BEVOEGD_BESTUURSNIVEAUS_FEDERAAL = 'Federaal';
    public const BEVOEGD_BESTUURSNIVEAUS_VLAAMS = 'Vlaams';
    public const BEVOEGD_BESTUURSNIVEAUS_PROVINCIAAL = 'Provinciaal';
    public const BEVOEGD_BESTUURSNIVEAUS_LOKAAL = 'Lokaal';
    public const UITVOEREND_BESTUURSNIVEAUS_EUROPEES = 'Europees';
    public const UITVOEREND_BESTUURSNIVEAUS_FEDERAAL = 'Federaal';
    public const UITVOEREND_BESTUURSNIVEAUS_VLAAMS = 'Vlaams';
    public const UITVOEREND_BESTUURSNIVEAUS_PROVINCIAAL = 'Provinciaal';
    public const UITVOEREND_BESTUURSNIVEAUS_LOKAAL = 'Lokaal';
    public const UITVOEREND_BESTUURSNIVEAUS_DERDEN = 'Derden';
    public const PUBLICATIEKANALEN_YOUR_EUROPE = 'YourEurope';
    public const TYPE_ADVIES_BEGELEIDING = 'AdviesBegeleiding';
    public const TYPE_BEWIJS = 'Bewijs';
    public const TYPE_FINANCIELE_VERPLICHTING = 'FinancieleVerplichting';
    public const TYPE_FINANCIEEL_VOORDEEL = 'FinancieelVoordeel';
    public const TYPE_INFRASTRUCTUUR_MATERIAAL = 'InfrastructuurMateriaal';
    public const TYPE_TOELATING = 'Toelating';
    public const TYPE_VOORWERP = 'Voorwerp';
    public const TAGS_YOUR_EUROPE_VERPLICHT = 'YourEuropeVerplicht';
    public const TAGS_YOUR_EUROPE_AANBEVOLEN = 'YourEuropeAanbevolen';
    public const THEMAS_BOUWEN_WONEN = 'BouwenWonen';
    public const THEMAS_BURGER_OVERHEID = 'BurgerOverheid';
    public const THEMAS_CULTUUR_SPORT_VRIJE_TIJD = 'CultuurSportVrijeTijd';
    public const THEMAS_ECONOMIE_WERK = 'EconomieWerk';
    public const THEMAS_MILIEU_ENERGIE = 'MilieuEnergie';
    public const THEMAS_MOBILITEIT_OPENBARE_WERKEN = 'MobiliteitOpenbareWerken';
    public const THEMAS_ONDERWIJS_WETENSCHAP = 'OnderwijsWetenschap';
    public const THEMAS_WELZIJN_GEZONDHEID = 'WelzijnGezondheid';
    public const DOELGROEPEN_BURGER = 'Burger';
    public const DOELGROEPEN_LOKAAL_BESTUUR = 'LokaalBestuur';
    public const DOELGROEPEN_ONDERNEMING = 'Onderneming';
    public const DOELGROEPEN_VERENIGING = 'Vereniging';
    public const DOELGROEPEN_VLAAMSE_OVERHEID = 'VlaamseOverheid';
    public const DOELGROEPEN_ORGANISATIE = 'Organisatie';
    public const TALEN_NLD = 'NLD';
    public const TALEN_FRA = 'FRA';
    public const TALEN_DEU = 'DEU';
    public const TALEN_ENG = 'ENG';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE = 'BE';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE1 = 'BE1';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE2 = 'BE2';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21 = 'BE21';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22 = 'BE22';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23 = 'BE23';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24 = 'BE24';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25 = 'BE25';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE211 = 'BE211';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE212 = 'BE212';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE213 = 'BE213';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE221 = 'BE221';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE222 = 'BE222';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE223 = 'BE223';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE231 = 'BE231';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE232 = 'BE232';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE233 = 'BE233';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE234 = 'BE234';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE235 = 'BE235';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE236 = 'BE236';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE241 = 'BE241';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE242 = 'BE242';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE251 = 'BE251';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE252 = 'BE252';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE253 = 'BE253';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE254 = 'BE254';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE255 = 'BE255';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE256 = 'BE256';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE257 = 'BE257';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE258 = 'BE258';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111001 = 'BE21111001';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111002 = 'BE21111002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111004 = 'BE21111004';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111005 = 'BE21111005';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111007 = 'BE21111007';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111008 = 'BE21111008';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111009 = 'BE21111009';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111013 = 'BE21111013';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111016 = 'BE21111016';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111018 = 'BE21111018';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111021 = 'BE21111021';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111022 = 'BE21111022';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111023 = 'BE21111023';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111024 = 'BE21111024';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111025 = 'BE21111025';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111029 = 'BE21111029';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111030 = 'BE21111030';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111035 = 'BE21111035';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111037 = 'BE21111037';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111038 = 'BE21111038';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111039 = 'BE21111039';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111040 = 'BE21111040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111044 = 'BE21111044';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111050 = 'BE21111050';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111052 = 'BE21111052';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111053 = 'BE21111053';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111054 = 'BE21111054';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111055 = 'BE21111055';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646030 = 'BE23646030';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111056 = 'BE21111056';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111057 = 'BE21111057';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212002 = 'BE21212002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212005 = 'BE21212005';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212007 = 'BE21212007';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212009 = 'BE21212009';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212014 = 'BE21212014';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212021 = 'BE21212021';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212025 = 'BE21212025';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212026 = 'BE21212026';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212029 = 'BE21212029';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212041 = 'BE21212041';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212030 = 'BE21212030';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212034 = 'BE21212034';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212035 = 'BE21212035';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212040 = 'BE21212040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313001 = 'BE21313001';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313002 = 'BE21313002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313003 = 'BE21313003';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313004 = 'BE21313004';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313006 = 'BE21313006';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313008 = 'BE21313008';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313010 = 'BE21313010';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313011 = 'BE21313011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313012 = 'BE21313012';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313013 = 'BE21313013';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313014 = 'BE21313014';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313016 = 'BE21313016';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313017 = 'BE21313017';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313019 = 'BE21313019';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313021 = 'BE21313021';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313023 = 'BE21313023';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313025 = 'BE21313025';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313029 = 'BE21313029';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313031 = 'BE21313031';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313035 = 'BE21313035';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313036 = 'BE21313036';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313037 = 'BE21313037';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313040 = 'BE21313040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313044 = 'BE21313044';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313046 = 'BE21313046';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313049 = 'BE21313049';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313053 = 'BE21313053';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171002 = 'BE22171002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171004 = 'BE22171004';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171011 = 'BE22171011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171016 = 'BE22171016';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171017 = 'BE22171017';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171020 = 'BE22171020';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171072 = 'BE22171072';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171022 = 'BE22171022';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171024 = 'BE22171024';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171034 = 'BE22171034';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171037 = 'BE22171037';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171045 = 'BE22171045';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22572042 = 'BE22572042';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171047 = 'BE22171047';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171053 = 'BE22171053';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171071 = 'BE22171071';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171057 = 'BE22171057';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171066 = 'BE22171066';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171067 = 'BE22171067';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171069 = 'BE22171069';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171070 = 'BE22171070';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272003 = 'BE22272003';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272004 = 'BE22272004';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272018 = 'BE22272018';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272020 = 'BE22272020';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272021 = 'BE22272021';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22572043 = 'BE22572043';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272025 = 'BE22272025';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272029 = 'BE22272029';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272030 = 'BE22272030';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272037 = 'BE22272037';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272038 = 'BE22272038';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272039 = 'BE22272039';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272040 = 'BE22272040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272041 = 'BE22272041';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373001 = 'BE22373001';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373110 = 'BE22373110';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373006 = 'BE22373006';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373111 = 'BE22373111';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373009 = 'BE22373009';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373022 = 'BE22373022';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373028 = 'BE22373028';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373032 = 'BE22373032';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373040 = 'BE22373040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373042 = 'BE22373042';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373066 = 'BE22373066';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373083 = 'BE22373083';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373098 = 'BE22373098';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373107 = 'BE22373107';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373109 = 'BE22373109';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141002 = 'BE23141002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141011 = 'BE23141011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141018 = 'BE23141018';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141024 = 'BE23141024';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141027 = 'BE23141027';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141034 = 'BE23141034';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141048 = 'BE23141048';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141063 = 'BE23141063';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141081 = 'BE23141081';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141082 = 'BE23141082';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242003 = 'BE23242003';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242004 = 'BE23242004';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242006 = 'BE23242006';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242008 = 'BE23242008';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242010 = 'BE23242010';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242011 = 'BE23242011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242023 = 'BE23242023';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242025 = 'BE23242025';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242026 = 'BE23242026';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242028 = 'BE23242028';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343002 = 'BE23343002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343005 = 'BE23343005';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343007 = 'BE23343007';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343010 = 'BE23343010';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343014 = 'BE23343014';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343018 = 'BE23343018';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444001 = 'BE23444001';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444001_VOOR_FUSIE_2019 = 'BE23444001_VOOR_FUSIE_2019';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444029 = 'BE23444029';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444011 = 'BE23444011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444011_VOOR_FUSIE_2019 = 'BE23444011_VOOR_FUSIE_2019';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444049 = 'BE23444049';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444086 = 'BE23444086';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444012 = 'BE23444012';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444013 = 'BE23444013';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444019 = 'BE23444019';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444020 = 'BE23444020';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444021 = 'BE23444021';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444087 = 'BE23444087';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444034 = 'BE23444034';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444085 = 'BE23444085';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444036 = 'BE23444036';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444088 = 'BE23444088';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444040 = 'BE23444040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444043 = 'BE23444043';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646029 = 'BE23646029';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444045 = 'BE23444045';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444048 = 'BE23444048';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444052 = 'BE23444052';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444064 = 'BE23444064';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444072 = 'BE23444072';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444073 = 'BE23444073';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444080 = 'BE23444080';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444081 = 'BE23444081';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545068 = 'BE23545068';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545017 = 'BE23545017';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545035 = 'BE23545035';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545041 = 'BE23545041';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545057 = 'BE23545057';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545059 = 'BE23545059';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545060 = 'BE23545060';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545061 = 'BE23545061';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545062 = 'BE23545062';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545063 = 'BE23545063';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545064 = 'BE23545064';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545065 = 'BE23545065';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646003 = 'BE23646003';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646013 = 'BE23646013';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646014 = 'BE23646014';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646020 = 'BE23646020';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646021 = 'BE23646021';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646024 = 'BE23646024';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646025 = 'BE23646025';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123002 = 'BE24123002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123003 = 'BE24123003';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123009 = 'BE24123009';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123016 = 'BE24123016';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123106 = 'BE24123106';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123023 = 'BE24123023';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123024 = 'BE24123024';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123025 = 'BE24123025';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123027 = 'BE24123027';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123032 = 'BE24123032';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123033 = 'BE24123033';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123038 = 'BE24123038';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123039 = 'BE24123039';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123044 = 'BE24123044';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123045 = 'BE24123045';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123047 = 'BE24123047';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123050 = 'BE24123050';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123052 = 'BE24123052';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123060 = 'BE24123060';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123062 = 'BE24123062';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123064 = 'BE24123064';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123077 = 'BE24123077';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123081 = 'BE24123081';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123086 = 'BE24123086';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123088 = 'BE24123088';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123094 = 'BE24123094';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123096 = 'BE24123096';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123097 = 'BE24123097';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123098 = 'BE24123098';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123099 = 'BE24123099';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123100 = 'BE24123100';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123101 = 'BE24123101';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123102 = 'BE24123102';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123103 = 'BE24123103';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123104 = 'BE24123104';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123105 = 'BE24123105';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224001 = 'BE24224001';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224007 = 'BE24224007';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224008 = 'BE24224008';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224009 = 'BE24224009';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224011 = 'BE24224011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224014 = 'BE24224014';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224016 = 'BE24224016';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224020 = 'BE24224020';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224028 = 'BE24224028';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224033 = 'BE24224033';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224038 = 'BE24224038';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224041 = 'BE24224041';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224043 = 'BE24224043';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224045 = 'BE24224045';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224048 = 'BE24224048';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224054 = 'BE24224054';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224055 = 'BE24224055';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224059 = 'BE24224059';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224062 = 'BE24224062';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224066 = 'BE24224066';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224086 = 'BE24224086';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224094 = 'BE24224094';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224104 = 'BE24224104';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224107 = 'BE24224107';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224109 = 'BE24224109';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224130 = 'BE24224130';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224133 = 'BE24224133';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224134 = 'BE24224134';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224135 = 'BE24224135';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224137 = 'BE24224137';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131003 = 'BE25131003';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131004 = 'BE25131004';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131005 = 'BE25131005';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131006 = 'BE25131006';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131012 = 'BE25131012';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131022 = 'BE25131022';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131033 = 'BE25131033';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131040 = 'BE25131040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131042 = 'BE25131042';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131043 = 'BE25131043';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232003 = 'BE25232003';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232006 = 'BE25232006';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232010 = 'BE25232010';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232011 = 'BE25232011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232030 = 'BE25232030';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333011 = 'BE25333011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333016 = 'BE25333016';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333021 = 'BE25333021';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333029 = 'BE25333029';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333037 = 'BE25333037';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333039 = 'BE25333039';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333040 = 'BE25333040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333041 = 'BE25333041';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434002 = 'BE25434002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434003 = 'BE25434003';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434009 = 'BE25434009';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434013 = 'BE25434013';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434022 = 'BE25434022';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434023 = 'BE25434023';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434025 = 'BE25434025';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434027 = 'BE25434027';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434040 = 'BE25434040';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434041 = 'BE25434041';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434042 = 'BE25434042';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434043 = 'BE25434043';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535002 = 'BE25535002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535005 = 'BE25535005';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535006 = 'BE25535006';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535011 = 'BE25535011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535013 = 'BE25535013';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535014 = 'BE25535014';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535029 = 'BE25535029';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636006 = 'BE25636006';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636007 = 'BE25636007';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636008 = 'BE25636008';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636010 = 'BE25636010';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636011 = 'BE25636011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636012 = 'BE25636012';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636015 = 'BE25636015';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636019 = 'BE25636019';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737002 = 'BE25737002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737022 = 'BE25737022';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737007 = 'BE25737007';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737010 = 'BE25737010';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737011 = 'BE25737011';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737021 = 'BE25737021';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737012 = 'BE25737012';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737015 = 'BE25737015';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737017 = 'BE25737017';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737018 = 'BE25737018';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737020 = 'BE25737020';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838002 = 'BE25838002';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838008 = 'BE25838008';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838014 = 'BE25838014';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838016 = 'BE25838016';
    public const GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838025 = 'BE25838025';
    public const YOUR_EUROPE_CATEGORIEEN_REIZEN = 'Reizen';
    public const YOUR_EUROPE_CATEGORIEEN_REIZEN_DOCUMENTEN = 'ReizenDocumenten';
    public const YOUR_EUROPE_CATEGORIEEN_REIZEN_RECHTEN_VERPLICHTINGEN = 'ReizenRechtenVerplichtingen';
    public const YOUR_EUROPE_CATEGORIEEN_REIZEN_ONDERSTEUNING_BEPERKTE_MOBILITEIT = 'ReizenOndersteuningBeperkteMobiliteit';
    public const YOUR_EUROPE_CATEGORIEEN_REIZEN_GOEDEREN = 'ReizenGoederen';
    public const YOUR_EUROPE_CATEGORIEEN_REIZEN_ELEKTRONISCHE_GEGEVENS = 'ReizenElektronischeGegevens';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING = 'WerkEnPensionering';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_WERK_ZOEKEN = 'WerkEnPensioneringWerkZoeken';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_GAAN_WERKEN = 'WerkEnPensioneringGaanWerken';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_ERKENNING_KWALIFICATIES = 'WerkEnPensioneringErkenningKwalificaties';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_BELASTINGHEFFING = 'WerkEnPensioneringBelastingheffing';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_AANSPRAKELIJKHEID_EN_VERZEKERINGEN = 'WerkEnPensioneringAansprakelijkheidEnVerzekeringen';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_ARBEIDSVOORWAARDEN = 'WerkEnPensioneringArbeidsvoorwaarden';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_GELIJKE_BEHANDELING = 'WerkEnPensioneringGelijkeBehandeling';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_GEZONDHEID_EN_VEILIGHEID = 'WerkEnPensioneringGezondheidEnVeiligheid';
    public const YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_SOCIALEZEKERHEIDSRECHTEN = 'WerkEnPensioneringSocialezekerheidsrechten';
    public const YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN = 'Voertuigen';
    public const YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_VERPLAATSING = 'VoertuigenVerplaatsing';
    public const YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_VERLENING_RIJBEWIJZEN = 'VoertuigenVerleningRijbewijzen';
    public const YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_VERPLICHTE_VERZEKERING = 'VoertuigenVerplichteVerzekering';
    public const YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_KOOP_VERKOOP = 'VoertuigenKoopVerkoop';
    public const YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_VERKEERSREGELS = 'VoertuigenVerkeersregels';
    public const YOUR_EUROPE_CATEGORIEEN_VERBLIJF = 'Verblijf';
    public const YOUR_EUROPE_CATEGORIEEN_VERBLIJF_VERHUIZING = 'VerblijfVerhuizing';
    public const YOUR_EUROPE_CATEGORIEEN_VERBLIJF_KOOP_VERKOOP = 'VerblijfKoopVerkoop';
    public const YOUR_EUROPE_CATEGORIEEN_VERBLIJF_VERKIEZINGEN = 'VerblijfVerkiezingen';
    public const YOUR_EUROPE_CATEGORIEEN_VERBLIJF_VERBLIJFSKAARTEN = 'VerblijfVerblijfskaarten';
    public const YOUR_EUROPE_CATEGORIEEN_VERBLIJF_NATURALISATIE = 'VerblijfNaturalisatie';
    public const YOUR_EUROPE_CATEGORIEEN_VERBLIJF_OVERLIJDEN = 'VerblijfOverlijden';
    public const YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE = 'OnderwijsOfStage';
    public const YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE_ONDERWIJSSTELSEL = 'OnderwijsOfStageOnderwijsstelsel';
    public const YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE_VRIJWILLIGERSWERK = 'OnderwijsOfStageVrijwilligerswerk';
    public const YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE_STAGE = 'OnderwijsOfStageStage';
    public const YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE_ONDERZOEK = 'OnderwijsOfStageOnderzoek';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG = 'Gezondheidszorg';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_MEDISCHE_BEHANDELING = 'GezondheidszorgMedischeBehandeling';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_GENEESMIDDELEN_KOPEN = 'GezondheidszorgGeneesmiddelenKopen';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_ZIEKTEVERZEKERING = 'GezondheidszorgZiekteverzekering';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_PREVENTIEVE_OPENBARE_GEZONDHEIDSMAATREGELEN = 'GezondheidszorgPreventieveOpenbareGezondheidsmaatregelen';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_NOODNUMMERS = 'GezondheidszorgNoodnummers';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_WOONZORGCENTRUM = 'GezondheidszorgWoonzorgcentrum';
    public const YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN = 'BurgerEnFamilieRechten';
    public const YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_KINDEREN = 'BurgerEnFamilieRechtenKinderen';
    public const YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_PARTNERS = 'BurgerEnFamilieRechtenPartners';
    public const YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_GENDER_IDENTITEIT = 'BurgerEnFamilieRechtenGenderIdentiteit';
    public const YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_ERFRECHTEN_EN_PLICHTEN = 'BurgerEnFamilieRechtenErfrechtenEnPlichten';
    public const YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_ONTVOERING_KINDEREN = 'BurgerEnFamilieRechtenOntvoeringKinderen';
    public const YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN = 'Consumentenrechten';
    public const YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_AANKOOP = 'ConsumentenrechtenAankoop';
    public const YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_BANKREKENING = 'ConsumentenrechtenBankrekening';
    public const YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_NUTSVOORZIENINGEN = 'ConsumentenrechtenNutsvoorzieningen';
    public const YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_BETALINGEN = 'ConsumentenrechtenBetalingen';
    public const YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_CONSUMENTENRECHTEN = 'ConsumentenrechtenConsumentenrechten';
    public const YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_VEILIGHEID = 'ConsumentenrechtenVeiligheid';
    public const YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_HUUR_MOTORVOERTUIGEN = 'ConsumentenrechtenHuurMotorvoertuigen';
    public const YOUR_EUROPE_CATEGORIEEN_BESCHERMING_PERSOONSGEGEVENS = 'BeschermingPersoonsgegevens';
    public const YOUR_EUROPE_CATEGORIEEN_BESCHERMING_PERSOONSGEGEVENS_UITOEFENING_RECHTEN = 'BeschermingPersoonsgegevensUitoefeningRechten';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF = 'Bedrijf';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_REGISTRATIEPROCEDURES_RECHTSVORMEN = 'BedrijfRegistratieproceduresRechtsvormen';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_VERPLAATSING = 'BedrijfVerplaatsing';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_INTELLECTUELE_EIGENDOMSRECHTEN = 'BedrijfIntellectueleEigendomsrechten';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_TRANSPARANTIE = 'BedrijfTransparantie';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_ONLINE_BETAAL_FUNCTIES = 'BedrijfOnlineBetaalFuncties';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_OVEREENKOMSTENRECHT = 'BedrijfOvereenkomstenrecht';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_INSOLVENTIE_LIQUIDATIE = 'BedrijfInsolventieLiquidatie';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_KREDIET_VERZEKERING = 'BedrijfKredietVerzekering';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_FUSIE_VERKOOP = 'BedrijfFusieVerkoop';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_AANSPRAKELIJKHEID_BESTUURDERS = 'BedrijfAansprakelijkheidBestuurders';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJF_PERSOONSGEGEVENS = 'BedrijfPersoonsgegevens';
    public const YOUR_EUROPE_CATEGORIEEN_WERKNEMERS = 'Werknemers';
    public const YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_ARBEIDSVOORWAARDEN = 'WerknemersArbeidsvoorwaarden';
    public const YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_SOCIALEZEKERHEID = 'WerknemersSocialezekerheid';
    public const YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_TEWERKSTELLING = 'WerknemersTewerkstelling';
    public const YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_GELIJKE_BEHANDELING = 'WerknemersGelijkeBehandeling';
    public const YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_PERSONEELSVERTEGENWOORDIGING = 'WerknemersPersoneelsvertegenwoordiging';
    public const YOUR_EUROPE_CATEGORIEEN_BELASTINGEN = 'Belastingen';
    public const YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_BTW = 'BelastingenBTW';
    public const YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_ACCIJNZEN = 'BelastingenAccijnzen';
    public const YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_DOUANERECHTEN = 'BelastingenDouanerechten';
    public const YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_DOUANEPROCEDURES = 'BelastingenDouaneprocedures';
    public const YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_OVERIGE_BELASTINGEN = 'BelastingenOverigeBelastingen';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN = 'Goederen';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_CE_MARKERING = 'GoederenCEMarkering';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_VOORSCHRIFTEN_VEREISTEN = 'GoederenVoorschriftenVereisten';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_NORMEN_SPECIFICATIES_CERTIFICERING = 'GoederenNormenSpecificatiesCertificering';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_ERKENNING_ZONDER_SPECIFICATIES = 'GoederenErkenningZonderSpecificaties';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_GEVAARLIJKE_STOFFEN = 'GoederenGevaarlijkeStoffen';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_VERKOOP_OP_AFSTAND = 'GoederenVerkoopOpAfstand';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_PRODUCTEN_MET_GEBREKEN = 'GoederenProductenMetGebreken';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_KEURMERKEN = 'GoederenKeurmerken';
    public const YOUR_EUROPE_CATEGORIEEN_GOEDEREN_RECYCLAGE = 'GoederenRecyclage';
    public const YOUR_EUROPE_CATEGORIEEN_DIENSTEN = 'Diensten';
    public const YOUR_EUROPE_CATEGORIEEN_DIENSTEN_LICENTIES_VERGUNNINGEN = 'DienstenLicentiesVergunningen';
    public const YOUR_EUROPE_CATEGORIEEN_DIENSTEN_KENNISGEVING_GRENSOVERSCHRIJDENDE_ACTIVITEITEN = 'DienstenKennisgevingGrensoverschrijdendeActiviteiten';
    public const YOUR_EUROPE_CATEGORIEEN_DIENSTEN_ERKENNING_BEROEPSKWALIFICATIES = 'DienstenErkenningBeroepskwalificaties';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJFSFINANCIERING = 'Bedrijfsfinanciering';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJFSFINANCIERING_FINANCIERING_UNIE = 'BedrijfsfinancieringFinancieringUnie';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJFSFINANCIERING_FINANCIERING_NATIONAAL = 'BedrijfsfinancieringFinancieringNationaal';
    public const YOUR_EUROPE_CATEGORIEEN_BEDRIJFSFINANCIERING_ONDERNEMERS_INITIATIEVEN = 'BedrijfsfinancieringOndernemersInitiatieven';
    public const YOUR_EUROPE_CATEGORIEEN_OVERHEIDSOPDRACHTEN = 'Overheidsopdrachten';
    public const YOUR_EUROPE_CATEGORIEEN_OVERHEIDSOPDRACHTEN_DEELNAME = 'OverheidsopdrachtenDeelname';
    public const YOUR_EUROPE_CATEGORIEEN_OVERHEIDSOPDRACHTEN_ONLINE_INSCHRIJVING = 'OverheidsopdrachtenOnlineInschrijving';
    public const YOUR_EUROPE_CATEGORIEEN_OVERHEIDSOPDRACHTEN_MELDING_ONREGELMATIGHEDEN = 'OverheidsopdrachtenMeldingOnregelmatigheden';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEID_VEILIGHEID_WERK = 'GezondheidVeiligheidWerk';
    public const YOUR_EUROPE_CATEGORIEEN_GEZONDHEID_VEILIGHEID_WERK_VERPLICHTINGEN = 'GezondheidVeiligheidWerkVerplichtingen';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_GEBOORTE = 'ProcedureGeboorte';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_GEBOORTE_BEWIJS = 'ProcedureGeboorteBewijs';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERBLIJF = 'ProcedureVerblijf';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERBLIJF_BEWIJS = 'ProcedureVerblijfBewijs';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STUDIE = 'ProcedureStudie';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STUDIE_AANVRAAG_TERTIAIR_ONDERWIJS = 'ProcedureStudieAanvraagTertiairOnderwijs';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STUDIE_VERZOEK_TOELATING_TERTIAIR_ONDERWIJS = 'ProcedureStudieVerzoekToelatingTertiairOnderwijs';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STUDIE_VERZOEK_ERKENNING_DIPLOMA = 'ProcedureStudieVerzoekErkenningDiploma';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK = 'ProcedureWerk';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK_VERZOEK = 'ProcedureWerkVerzoek';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK_WIJZIGING_BEROEPSSITUATIE = 'ProcedureWerkWijzigingBeroepssituatie';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK_AANVRAAG_ZIEKTEVERZEKERINGSKAART = 'ProcedureWerkAanvraagZiekteverzekeringskaart';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK_AANGIFTE_INKOMSTENBELASTING = 'ProcedureWerkAangifteInkomstenbelasting';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING = 'ProcedureVerhuizing';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING_ADRESWIJZIGING = 'ProcedureVerhuizingAdreswijziging';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING_INSCHRIJVING_MOTORVOERTUIG = 'ProcedureVerhuizingInschrijvingMotorvoertuig';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING_STICKERS_WEGENINFRASTRUCTUUR = 'ProcedureVerhuizingStickersWegeninfrastructuur';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING_EMISSIESTICKERS = 'ProcedureVerhuizingEmissiestickers';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_PENSIONERING = 'ProcedurePensionering';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_PENSIONERING_AANVRAAG_UITKERING = 'ProcedurePensioneringAanvraagUitkering';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_PENSIONERING_VERZOEK_OM_INFORMATIE = 'ProcedurePensioneringVerzoekOmInformatie';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF = 'ProcedureStartenExploiterenSluitenBedrijf';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_KENNISGEVING = 'ProcedureStartenExploiterenSluitenBedrijfKennisgeving';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_PENSIOEN_EN_VERZEKERINGSREGELINGEN_WERKGEVER = 'ProcedureStartenExploiterenSluitenBedrijfPensioenEnVerzekeringsregelingenWerkgever';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_PENSIOEN_EN_VERZEKERINGSREGELINGEN_WERKNEMER = 'ProcedureStartenExploiterenSluitenBedrijfPensioenEnVerzekeringsregelingenWerknemer';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_AANGIFTE_VENNOOTSCHAPSBELASTING = 'ProcedureStartenExploiterenSluitenBedrijfAangifteVennootschapsbelasting';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_BEEINDIGING_ARBEIDSOVEREENKOMST = 'ProcedureStartenExploiterenSluitenBedrijfBeeindigingArbeidsovereenkomst';
    public const YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_BETALING_SOCIALE_BIJDRAGEN = 'ProcedureStartenExploiterenSluitenBedrijfBetalingSocialeBijdragen';
    public const SUBSIDIEMAATREGEL_CA = 'CA';
    public const SUBSIDIEMAATREGEL_CB = 'CB';
    public const SUBSIDIEMAATREGEL_CD = 'CD';
    public const SUBSIDIEMAATREGEL_CE = 'CE';
    public const SUBSIDIEMAATREGEL_EA = 'EA';
    public const SUBSIDIEMAATREGEL_EB = 'EB';
    public const SUBSIDIEMAATREGEL_EC = 'EC';
    public const SUBSIDIEMAATREGEL_ED = 'ED';
    public const SUBSIDIEMAATREGEL_EF = 'EF';
    public const SUBSIDIEMAATREGEL_EG = 'EG';
    public const SUBSIDIEMAATREGEL_EH = 'EH';
    public const SUBSIDIEMAATREGEL_EI = 'EI';
    public const SUBSIDIEMAATREGEL_EJ = 'EJ';
    public const SUBSIDIEMAATREGEL_EK = 'EK';
    public const SUBSIDIEMAATREGEL_EL = 'EL';
    public const SUBSIDIEMAATREGEL_EM = 'EM';
    public const SUBSIDIEMAATREGEL_EN = 'EN';
    public const SUBSIDIEMAATREGEL_EO = 'EO';
    public const SUBSIDIEMAATREGEL_FA = 'FA';
    public const SUBSIDIEMAATREGEL_FB = 'FB';
    public const SUBSIDIEMAATREGEL_FC = 'FC';
    public const SUBSIDIEMAATREGEL_FD = 'FD';
    public const SUBSIDIEMAATREGEL_FE = 'FE';
    public const SUBSIDIEMAATREGEL_FF = 'FF';
    public const SUBSIDIEMAATREGEL_FG = 'FG';
    public const SUBSIDIEMAATREGEL_FH = 'FH';
    public const SUBSIDIEMAATREGEL_FI = 'FI';
    public const SUBSIDIEMAATREGEL_GB = 'GB';
    public const SUBSIDIEMAATREGEL_GC = 'GC';
    public const SUBSIDIEMAATREGEL_GE_01 = 'GE_01';
    public const SUBSIDIEMAATREGEL_GE_02 = 'GE_02';
    public const SUBSIDIEMAATREGEL_GE_03 = 'GE_03';
    public const SUBSIDIEMAATREGEL_GE_04 = 'GE_04';
    public const SUBSIDIEMAATREGEL_GF = 'GF';
    public const SUBSIDIEMAATREGEL_GH = 'GH';
    public const SUBSIDIEMAATREGEL_GI = 'GI';
    public const SUBSIDIEMAATREGEL_GJ = 'GJ';
    public const SUBSIDIEMAATREGEL_GK = 'GK';
    public const SUBSIDIEMAATREGEL_GL = 'GL';
    public const SUBSIDIEMAATREGEL_GM = 'GM';
    public const SUBSIDIEMAATREGEL_GQ = 'GQ';
    public const SUBSIDIEMAATREGEL_GR_01 = 'GR_01';
    public const SUBSIDIEMAATREGEL_GR_02 = 'GR_02';
    public const SUBSIDIEMAATREGEL_GR_03 = 'GR_03';
    public const SUBSIDIEMAATREGEL_GR_04 = 'GR_04';
    public const SUBSIDIEMAATREGEL_GS_01 = 'GS_01';
    public const SUBSIDIEMAATREGEL_GS_02 = 'GS_02';
    public const SUBSIDIEMAATREGEL_GS_03 = 'GS_03';
    public const SUBSIDIEMAATREGEL_GS_04 = 'GS_04';
    public const SUBSIDIEMAATREGEL_GS_05 = 'GS_05';
    public const SUBSIDIEMAATREGEL_GS_06 = 'GS_06';
    public const SUBSIDIEMAATREGEL_GS_07 = 'GS_07';
    public const SUBSIDIEMAATREGEL_GS_08 = 'GS_08';
    public const SUBSIDIEMAATREGEL_GT_01 = 'GT_01';
    public const SUBSIDIEMAATREGEL_GT_02 = 'GT_02';
    public const SUBSIDIEMAATREGEL_GT_03 = 'GT_03';
    public const SUBSIDIEMAATREGEL_GT_04 = 'GT_04';
    public const SUBSIDIEMAATREGEL_GT_05 = 'GT_05';
    public const SUBSIDIEMAATREGEL_GT_06 = 'GT_06';
    public const SUBSIDIEMAATREGEL_GT_07 = 'GT_07';
    public const SUBSIDIEMAATREGEL_GT_08 = 'GT_08';
    public const SUBSIDIEMAATREGEL_GT_09 = 'GT_09';
    public const SUBSIDIEMAATREGEL_GT_10 = 'GT_10';
    public const SUBSIDIEMAATREGEL_GT_11 = 'GT_11';
    public const SUBSIDIEMAATREGEL_GU_01 = 'GU_01';
    public const SUBSIDIEMAATREGEL_GU_02 = 'GU_02';
    public const SUBSIDIEMAATREGEL_GU_03 = 'GU_03';
    public const SUBSIDIEMAATREGEL_GU_04 = 'GU_04';
    public const SUBSIDIEMAATREGEL_HA = 'HA';
    public const SUBSIDIEMAATREGEL_HA_01 = 'HA_01';
    public const SUBSIDIEMAATREGEL_HA_02 = 'HA_02';
    public const SUBSIDIEMAATREGEL_HA_03 = 'HA_03';
    public const SUBSIDIEMAATREGEL_HA_04 = 'HA_04';
    public const SUBSIDIEMAATREGEL_HA_05 = 'HA_05';
    public const SUBSIDIEMAATREGEL_HA_06 = 'HA_06';
    public const SUBSIDIEMAATREGEL_HA_07 = 'HA_07';
    public const SUBSIDIEMAATREGEL_HB = 'HB';
    public const SUBSIDIEMAATREGEL_HB_01 = 'HB_01';
    public const SUBSIDIEMAATREGEL_HB_02 = 'HB_02';
    public const SUBSIDIEMAATREGEL_HC_01 = 'HC_01';
    public const SUBSIDIEMAATREGEL_HC_02 = 'HC_02';
    public const SUBSIDIEMAATREGEL_HC_03 = 'HC_03';
    public const SUBSIDIEMAATREGEL_HC_04 = 'HC_04';
    public const SUBSIDIEMAATREGEL_HC_05 = 'HC_05';
    public const SUBSIDIEMAATREGEL_HC_06 = 'HC_06';
    public const SUBSIDIEMAATREGEL_HC_07 = 'HC_07';
    public const SUBSIDIEMAATREGEL_HC_08 = 'HC_08';
    public const SUBSIDIEMAATREGEL_HC_09 = 'HC_09';
    public const SUBSIDIEMAATREGEL_HC_10 = 'HC_10';
    public const SUBSIDIEMAATREGEL_HC_11 = 'HC_11';
    public const SUBSIDIEMAATREGEL_HD_01 = 'HD_01';
    public const SUBSIDIEMAATREGEL_HD_02 = 'HD_02';
    public const SUBSIDIEMAATREGEL_HD_03 = 'HD_03';
    public const SUBSIDIEMAATREGEL_HD_04 = 'HD_04';
    public const SUBSIDIEMAATREGEL_HD_05 = 'HD_05';
    public const SUBSIDIEMAATREGEL_HD_06 = 'HD_06';
    public const SUBSIDIEMAATREGEL_HD_07 = 'HD_07';
    public const SUBSIDIEMAATREGEL_HD_08 = 'HD_08';
    public const SUBSIDIEMAATREGEL_HE_01 = 'HE_01';
    public const SUBSIDIEMAATREGEL_HE_02 = 'HE_02';
    public const SUBSIDIEMAATREGEL_HE_03 = 'HE_03';
    public const SUBSIDIEMAATREGEL_HE_04 = 'HE_04';
    public const SUBSIDIEMAATREGEL_HF_01 = 'HF_01';
    public const SUBSIDIEMAATREGEL_HF_02 = 'HF_02';
    public const SUBSIDIEMAATREGEL_HF_03 = 'HF_03';
    public const SUBSIDIEMAATREGEL_HF_04 = 'HF_04';
    public const SUBSIDIEMAATREGEL_HF_05 = 'HF_05';
    public const SUBSIDIEMAATREGEL_HG_01 = 'HG_01';
    public const SUBSIDIEMAATREGEL_HG_02 = 'HG_02';
    public const SUBSIDIEMAATREGEL_HH = 'HH';
    public const SUBSIDIEMAATREGEL_HI_01 = 'HI_01';
    public const SUBSIDIEMAATREGEL_HI_02 = 'HI_02';
    public const SUBSIDIEMAATREGEL_HI_03 = 'HI_03';
    public const SUBSIDIEMAATREGEL_HI_04 = 'HI_04';
    public const SUBSIDIEMAATREGEL_HJ = 'HJ';
    public const SUBSIDIEMAATREGEL_HK = 'HK';
    public const SUBSIDIEMAATREGEL_HL = 'HL';
    public const SUBSIDIEMAATREGEL_HM = 'HM';
    public const SUBSIDIEMAATREGEL_HN = 'HN';
    public const SUBSIDIEMAATREGEL_HO = 'HO';
    public const SUBSIDIEMAATREGEL_HP = 'HP';
    public const SUBSIDIEMAATREGEL_HQ = 'HQ';
    public const SUBSIDIEMAATREGEL_HR = 'HR';
    public const SUBSIDIEMAATREGEL_HS = 'HS';
    public const SUBSIDIEMAATREGEL_HT = 'HT';
    public const SUBSIDIEMAATREGEL_HT_01 = 'HT_01';
    public const SUBSIDIEMAATREGEL_HT_02 = 'HT_02';
    public const SUBSIDIEMAATREGEL_HT_03 = 'HT_03';
    public const SUBSIDIEMAATREGEL_HT_04 = 'HT_04';
    public const SUBSIDIEMAATREGEL_HT_05 = 'HT_05';
    public const SUBSIDIEMAATREGEL_HT_06 = 'HT_06';
    public const SUBSIDIEMAATREGEL_HT_07 = 'HT_07';
    public const SUBSIDIEMAATREGEL_HT_08 = 'HT_08';
    public const SUBSIDIEMAATREGEL_HT_09 = 'HT_09';
    public const SUBSIDIEMAATREGEL_HT_10 = 'HT_10';
    public const SUBSIDIEMAATREGEL_HU = 'HU';
    public const SUBSIDIEMAATREGEL_HU_01 = 'HU_01';
    public const SUBSIDIEMAATREGEL_HU_02 = 'HU_02';
    public const SUBSIDIEMAATREGEL_HU_03 = 'HU_03';
    public const SUBSIDIEMAATREGEL_HU_04 = 'HU_04';
    public const SUBSIDIEMAATREGEL_HU_05 = 'HU_05';
    public const SUBSIDIEMAATREGEL_HU_06 = 'HU_06';
    public const SUBSIDIEMAATREGEL_HU_07 = 'HU_07';
    public const SUBSIDIEMAATREGEL_HU_08 = 'HU_08';
    public const SUBSIDIEMAATREGEL_HV = 'HV';
    public const SUBSIDIEMAATREGEL_HV_01 = 'HV_01';
    public const SUBSIDIEMAATREGEL_HV_02 = 'HV_02';
    public const SUBSIDIEMAATREGEL_HV_03 = 'HV_03';
    public const SUBSIDIEMAATREGEL_HV_04 = 'HV_04';
    public const SUBSIDIEMAATREGEL_HV_05 = 'HV_05';
    public const SUBSIDIEMAATREGEL_HV_06 = 'HV_06';
    public const SUBSIDIEMAATREGEL_HW = 'HW';
    public const SUBSIDIEMAATREGEL_HX = 'HX';
    public const SUBSIDIEMAATREGEL_JA = 'JA';
    public const SUBSIDIEMAATREGEL_JC = 'JC';
    public const SUBSIDIEMAATREGEL_JE = 'JE';
    public const SUBSIDIEMAATREGEL_JF = 'JF';
    public const SUBSIDIEMAATREGEL_JG = 'JG';
    public const SUBSIDIEMAATREGEL_JH = 'JH';
    public const SUBSIDIEMAATREGEL_JI = 'JI';
    public const SUBSIDIEMAATREGEL_KA = 'KA';
    public const SUBSIDIEMAATREGEL_KB_01 = 'KB_01';
    public const SUBSIDIEMAATREGEL_KB_02 = 'KB_02';
    public const SUBSIDIEMAATREGEL_KB_03 = 'KB_03';
    public const SUBSIDIEMAATREGEL_KD = 'KD';
    public const SUBSIDIEMAATREGEL_KE = 'KE';
    public const SUBSIDIEMAATREGEL_KF = 'KF';
    public const SUBSIDIEMAATREGEL_MB = 'MB';
    public const SUBSIDIEMAATREGEL_MC = 'MC';
    public const SUBSIDIEMAATREGEL_MD = 'MD';
    public const SUBSIDIEMAATREGEL_ME = 'ME';
    public const SUBSIDIEMAATREGEL_MK = 'MK';
    public const SUBSIDIEMAATREGEL_ML = 'ML';
    public const SUBSIDIEMAATREGEL_MM = 'MM';
    public const SUBSIDIEMAATREGEL_MN = 'MN';
    public const SUBSIDIEMAATREGEL_MO = 'MO';
    public const SUBSIDIEMAATREGEL_MP = 'MP';
    public const SUBSIDIEMAATREGEL_MQ = 'MQ';
    public const SUBSIDIEMAATREGEL_MR = 'MR';
    public const SUBSIDIEMAATREGEL_MS = 'MS';
    public const SUBSIDIEMAATREGEL_MT = 'MT';
    public const SUBSIDIEMAATREGEL_MU = 'MU';
    public const SUBSIDIEMAATREGEL_MV = 'MV';
    public const SUBSIDIEMAATREGEL_MW = 'MW';
    public const SUBSIDIEMAATREGEL_QA = 'QA';
    public const SUBSIDIEMAATREGEL_QB = 'QB';
    public const SUBSIDIEMAATREGEL_QC = 'QC';
    public const SUBSIDIEMAATREGEL_QD = 'QD';
    public const SUBSIDIEMAATREGEL_QE = 'QE';
    public const SUBSIDIEMAATREGEL_QF = 'QF';
    public const SUBSIDIEMAATREGEL_QG = 'QG';
    public const SUBSIDIEMAATREGEL_QH = 'QH';
    public const SUBSIDIEMAATREGEL_QI = 'QI';
    public const SUBSIDIEMAATREGEL_QJ = 'QJ';
    public const SUBSIDIEMAATREGEL_QK = 'QK';
    public const SUBSIDIEMAATREGEL_QM = 'QM';
    public const SUBSIDIEMAATREGEL_QN = 'QN';
    public const SUBSIDIEMAATREGEL_QO = 'QO';
    public const SUBSIDIEMAATREGEL_QP = 'QP';
    public const SUBSIDIEMAATREGEL_QQ = 'QQ';
    public const SUBSIDIEMAATREGEL_QR = 'QR';
    public const SUBSIDIEMAATREGEL_QT = 'QT';
    public const SUBSIDIEMAATREGEL_SA = 'SA';
    public const SUBSIDIEMAATREGEL_SB = 'SB';
    public const SUBSIDIEMAATREGEL_SC = 'SC';
    public const SUBSIDIEMAATREGEL_SD = 'SD';
    public const SUBSIDIEMAATREGEL_SE = 'SE';
    public const SUBSIDIEMAATREGEL_SF = 'SF';
    public const SUBSIDIEMAATREGEL_SG_01 = 'SG_01';
    public const SUBSIDIEMAATREGEL_SG_02 = 'SG_02';
    public const SUBSIDIEMAATREGEL_SH_01 = 'SH_01';
    public const SUBSIDIEMAATREGEL_SH_02 = 'SH_02';
    public const SUBSIDIEMAATREGEL_SI = 'SI';
    public const SUBSIDIEMAATREGEL_SJ_01 = 'SJ_01';
    public const SUBSIDIEMAATREGEL_SJ_02 = 'SJ_02';
    public const SUBSIDIEMAATREGEL_SJ_03 = 'SJ_03';
    public const SUBSIDIEMAATREGEL_SJ_04 = 'SJ_04';
    public const SUBSIDIEMAATREGEL_SL = 'SL';
    public const SUBSIDIEMAATREGEL_SM = 'SM';
    public const SUBSIDIEMAATREGEL_SN = 'SN';
    public const SUBSIDIEMAATREGEL_SO = 'SO';
    public const SUBSIDIEMAATREGEL_SP = 'SP';
    public const SUBSIDIEMAATREGEL_SQ = 'SQ';
    public const SUBSIDIEMAATREGEL_SR = 'SR';
    public const SUBSIDIEMAATREGEL_SS = 'SS';
    public const SUBSIDIEMAATREGEL_ST = 'ST';
    public const SUBSIDIEMAATREGEL_SU = 'SU';
    public const SUBSIDIEMAATREGEL_SW = 'SW';
    public const SUBSIDIEMAATREGEL_SZ = 'SZ';
    public const SUBSIDIEMAATREGEL_TA = 'TA';
    public const SUBSIDIEMAATREGEL_TB = 'TB';
    public const SUBSIDIEMAATREGEL_TC = 'TC';
    public const SUBSIDIEMAATREGEL_TD = 'TD';
    public const SUBSIDIEMAATREGEL_TF = 'TF';
    public const SUBSIDIEMAATREGEL_TG = 'TG';
    public const SUBSIDIEMAATREGEL_TH = 'TH';
    public const SUBSIDIEMAATREGEL_TI = 'TI';
    public const SUBSIDIEMAATREGEL_TJ = 'TJ';
    public const SUBSIDIEMAATREGEL_TK = 'TK';
    public const SUBSIDIEMAATREGEL_TL = 'TL';
    public const SUBSIDIEMAATREGEL_TM = 'TM';
    public const SUBSIDIEMAATREGEL_TN = 'TN';
    public const SUBSIDIEMAATREGEL_TO = 'TO';
    public const SUBSIDIEMAATREGEL_TQ = 'TQ';
    public const SUBSIDIEMAATREGEL_TR = 'TR';
    public const SUBSIDIEMAATREGEL_TS = 'TS';
    public const SUBSIDIEMAATREGEL_TT = 'TT';
    public const SUBSIDIEMAATREGEL_TU = 'TU';
    public const SUBSIDIEMAATREGEL_TV = 'TV';
    public const SUBSIDIEMAATREGEL_TW = 'TW';
    public const SUBSIDIEMAATREGEL_TX = 'TX';
    public const SUBSIDIEMAATREGEL_TY = 'TY';
    public const SUBSIDIEMAATREGEL_VB = 'VB';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getBevoegdBestuursniveausAllowableValues()
    {
        return [
            self::BEVOEGD_BESTUURSNIVEAUS_EUROPEES,
            self::BEVOEGD_BESTUURSNIVEAUS_FEDERAAL,
            self::BEVOEGD_BESTUURSNIVEAUS_VLAAMS,
            self::BEVOEGD_BESTUURSNIVEAUS_PROVINCIAAL,
            self::BEVOEGD_BESTUURSNIVEAUS_LOKAAL,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getUitvoerendBestuursniveausAllowableValues()
    {
        return [
            self::UITVOEREND_BESTUURSNIVEAUS_EUROPEES,
            self::UITVOEREND_BESTUURSNIVEAUS_FEDERAAL,
            self::UITVOEREND_BESTUURSNIVEAUS_VLAAMS,
            self::UITVOEREND_BESTUURSNIVEAUS_PROVINCIAAL,
            self::UITVOEREND_BESTUURSNIVEAUS_LOKAAL,
            self::UITVOEREND_BESTUURSNIVEAUS_DERDEN,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPublicatiekanalenAllowableValues()
    {
        return [
            self::PUBLICATIEKANALEN_YOUR_EUROPE,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTypeAllowableValues()
    {
        return [
            self::TYPE_ADVIES_BEGELEIDING,
            self::TYPE_BEWIJS,
            self::TYPE_FINANCIELE_VERPLICHTING,
            self::TYPE_FINANCIEEL_VOORDEEL,
            self::TYPE_INFRASTRUCTUUR_MATERIAAL,
            self::TYPE_TOELATING,
            self::TYPE_VOORWERP,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTagsAllowableValues()
    {
        return [
            self::TAGS_YOUR_EUROPE_VERPLICHT,
            self::TAGS_YOUR_EUROPE_AANBEVOLEN,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getThemasAllowableValues()
    {
        return [
            self::THEMAS_BOUWEN_WONEN,
            self::THEMAS_BURGER_OVERHEID,
            self::THEMAS_CULTUUR_SPORT_VRIJE_TIJD,
            self::THEMAS_ECONOMIE_WERK,
            self::THEMAS_MILIEU_ENERGIE,
            self::THEMAS_MOBILITEIT_OPENBARE_WERKEN,
            self::THEMAS_ONDERWIJS_WETENSCHAP,
            self::THEMAS_WELZIJN_GEZONDHEID,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getDoelgroepenAllowableValues()
    {
        return [
            self::DOELGROEPEN_BURGER,
            self::DOELGROEPEN_LOKAAL_BESTUUR,
            self::DOELGROEPEN_ONDERNEMING,
            self::DOELGROEPEN_VERENIGING,
            self::DOELGROEPEN_VLAAMSE_OVERHEID,
            self::DOELGROEPEN_ORGANISATIE,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTalenAllowableValues()
    {
        return [
            self::TALEN_NLD,
            self::TALEN_FRA,
            self::TALEN_DEU,
            self::TALEN_ENG,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getGeografischToepassingsgebiedenAllowableValues()
    {
        return [
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE1,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE2,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE211,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE212,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE213,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE221,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE222,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE223,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE231,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE232,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE233,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE234,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE235,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE236,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE241,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE242,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE251,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE252,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE253,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE254,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE255,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE256,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE257,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE258,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111001,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111004,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111005,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111007,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111008,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111009,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111013,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111016,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111018,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111021,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111022,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111023,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111024,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111025,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111029,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111030,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111035,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111037,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111038,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111039,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111044,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111050,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111052,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111053,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111054,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111055,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646030,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111056,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21111057,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212005,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212007,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212009,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212014,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212021,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212025,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212026,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212029,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212041,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212030,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212034,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212035,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21212040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313001,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313003,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313004,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313006,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313008,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313010,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313012,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313013,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313014,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313016,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313017,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313019,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313021,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313023,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313025,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313029,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313031,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313035,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313036,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313037,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313044,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313046,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313049,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE21313053,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171004,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171016,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171017,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171020,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171072,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171022,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171024,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171034,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171037,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171045,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22572042,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171047,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171053,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171071,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171057,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171066,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171067,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171069,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22171070,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272003,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272004,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272018,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272020,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272021,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22572043,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272025,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272029,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272030,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272037,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272038,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272039,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22272041,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373001,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373110,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373006,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373111,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373009,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373022,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373028,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373032,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373042,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373066,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373083,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373098,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373107,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE22373109,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141018,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141024,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141027,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141034,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141048,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141063,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141081,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23141082,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242003,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242004,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242006,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242008,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242010,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242023,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242025,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242026,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23242028,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343005,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343007,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343010,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343014,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23343018,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444001,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444001_VOOR_FUSIE_2019,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444029,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444011_VOOR_FUSIE_2019,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444049,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444086,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444012,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444013,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444019,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444020,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444021,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444087,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444034,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444085,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444036,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444088,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444043,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646029,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444045,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444048,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444052,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444064,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444072,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444073,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444080,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23444081,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545068,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545017,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545035,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545041,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545057,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545059,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545060,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545061,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545062,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545063,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545064,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23545065,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646003,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646013,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646014,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646020,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646021,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646024,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE23646025,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123003,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123009,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123016,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123106,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123023,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123024,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123025,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123027,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123032,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123033,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123038,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123039,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123044,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123045,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123047,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123050,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123052,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123060,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123062,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123064,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123077,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123081,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123086,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123088,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123094,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123096,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123097,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123098,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123099,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123100,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123101,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123102,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123103,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123104,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24123105,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224001,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224007,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224008,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224009,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224014,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224016,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224020,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224028,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224033,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224038,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224041,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224043,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224045,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224048,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224054,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224055,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224059,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224062,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224066,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224086,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224094,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224104,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224107,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224109,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224130,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224133,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224134,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224135,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE24224137,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131003,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131004,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131005,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131006,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131012,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131022,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131033,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131042,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25131043,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232003,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232006,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232010,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25232030,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333016,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333021,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333029,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333037,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333039,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25333041,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434003,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434009,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434013,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434022,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434023,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434025,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434027,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434040,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434041,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434042,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25434043,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535005,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535006,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535013,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535014,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25535029,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636006,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636007,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636008,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636010,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636012,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636015,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25636019,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737022,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737007,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737010,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737011,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737021,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737012,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737015,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737017,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737018,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25737020,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838002,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838008,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838014,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838016,
            self::GEOGRAFISCH_TOEPASSINGSGEBIEDEN_BE25838025,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getYourEuropeCategorieenAllowableValues()
    {
        return [
            self::YOUR_EUROPE_CATEGORIEEN_REIZEN,
            self::YOUR_EUROPE_CATEGORIEEN_REIZEN_DOCUMENTEN,
            self::YOUR_EUROPE_CATEGORIEEN_REIZEN_RECHTEN_VERPLICHTINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_REIZEN_ONDERSTEUNING_BEPERKTE_MOBILITEIT,
            self::YOUR_EUROPE_CATEGORIEEN_REIZEN_GOEDEREN,
            self::YOUR_EUROPE_CATEGORIEEN_REIZEN_ELEKTRONISCHE_GEGEVENS,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_WERK_ZOEKEN,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_GAAN_WERKEN,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_ERKENNING_KWALIFICATIES,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_BELASTINGHEFFING,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_AANSPRAKELIJKHEID_EN_VERZEKERINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_ARBEIDSVOORWAARDEN,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_GELIJKE_BEHANDELING,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_GEZONDHEID_EN_VEILIGHEID,
            self::YOUR_EUROPE_CATEGORIEEN_WERK_EN_PENSIONERING_SOCIALEZEKERHEIDSRECHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN,
            self::YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_VERPLAATSING,
            self::YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_VERLENING_RIJBEWIJZEN,
            self::YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_VERPLICHTE_VERZEKERING,
            self::YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_KOOP_VERKOOP,
            self::YOUR_EUROPE_CATEGORIEEN_VOERTUIGEN_VERKEERSREGELS,
            self::YOUR_EUROPE_CATEGORIEEN_VERBLIJF,
            self::YOUR_EUROPE_CATEGORIEEN_VERBLIJF_VERHUIZING,
            self::YOUR_EUROPE_CATEGORIEEN_VERBLIJF_KOOP_VERKOOP,
            self::YOUR_EUROPE_CATEGORIEEN_VERBLIJF_VERKIEZINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_VERBLIJF_VERBLIJFSKAARTEN,
            self::YOUR_EUROPE_CATEGORIEEN_VERBLIJF_NATURALISATIE,
            self::YOUR_EUROPE_CATEGORIEEN_VERBLIJF_OVERLIJDEN,
            self::YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE,
            self::YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE_ONDERWIJSSTELSEL,
            self::YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE_VRIJWILLIGERSWERK,
            self::YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE_STAGE,
            self::YOUR_EUROPE_CATEGORIEEN_ONDERWIJS_OF_STAGE_ONDERZOEK,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_MEDISCHE_BEHANDELING,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_GENEESMIDDELEN_KOPEN,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_ZIEKTEVERZEKERING,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_PREVENTIEVE_OPENBARE_GEZONDHEIDSMAATREGELEN,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_NOODNUMMERS,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEIDSZORG_WOONZORGCENTRUM,
            self::YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_KINDEREN,
            self::YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_PARTNERS,
            self::YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_GENDER_IDENTITEIT,
            self::YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_ERFRECHTEN_EN_PLICHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_BURGER_EN_FAMILIE_RECHTEN_ONTVOERING_KINDEREN,
            self::YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_AANKOOP,
            self::YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_BANKREKENING,
            self::YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_NUTSVOORZIENINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_BETALINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_CONSUMENTENRECHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_VEILIGHEID,
            self::YOUR_EUROPE_CATEGORIEEN_CONSUMENTENRECHTEN_HUUR_MOTORVOERTUIGEN,
            self::YOUR_EUROPE_CATEGORIEEN_BESCHERMING_PERSOONSGEGEVENS,
            self::YOUR_EUROPE_CATEGORIEEN_BESCHERMING_PERSOONSGEGEVENS_UITOEFENING_RECHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_REGISTRATIEPROCEDURES_RECHTSVORMEN,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_VERPLAATSING,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_INTELLECTUELE_EIGENDOMSRECHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_TRANSPARANTIE,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_ONLINE_BETAAL_FUNCTIES,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_OVEREENKOMSTENRECHT,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_INSOLVENTIE_LIQUIDATIE,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_KREDIET_VERZEKERING,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_FUSIE_VERKOOP,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_AANSPRAKELIJKHEID_BESTUURDERS,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJF_PERSOONSGEGEVENS,
            self::YOUR_EUROPE_CATEGORIEEN_WERKNEMERS,
            self::YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_ARBEIDSVOORWAARDEN,
            self::YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_SOCIALEZEKERHEID,
            self::YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_TEWERKSTELLING,
            self::YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_GELIJKE_BEHANDELING,
            self::YOUR_EUROPE_CATEGORIEEN_WERKNEMERS_PERSONEELSVERTEGENWOORDIGING,
            self::YOUR_EUROPE_CATEGORIEEN_BELASTINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_BTW,
            self::YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_ACCIJNZEN,
            self::YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_DOUANERECHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_DOUANEPROCEDURES,
            self::YOUR_EUROPE_CATEGORIEEN_BELASTINGEN_OVERIGE_BELASTINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_CE_MARKERING,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_VOORSCHRIFTEN_VEREISTEN,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_NORMEN_SPECIFICATIES_CERTIFICERING,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_ERKENNING_ZONDER_SPECIFICATIES,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_GEVAARLIJKE_STOFFEN,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_VERKOOP_OP_AFSTAND,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_PRODUCTEN_MET_GEBREKEN,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_KEURMERKEN,
            self::YOUR_EUROPE_CATEGORIEEN_GOEDEREN_RECYCLAGE,
            self::YOUR_EUROPE_CATEGORIEEN_DIENSTEN,
            self::YOUR_EUROPE_CATEGORIEEN_DIENSTEN_LICENTIES_VERGUNNINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_DIENSTEN_KENNISGEVING_GRENSOVERSCHRIJDENDE_ACTIVITEITEN,
            self::YOUR_EUROPE_CATEGORIEEN_DIENSTEN_ERKENNING_BEROEPSKWALIFICATIES,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJFSFINANCIERING,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJFSFINANCIERING_FINANCIERING_UNIE,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJFSFINANCIERING_FINANCIERING_NATIONAAL,
            self::YOUR_EUROPE_CATEGORIEEN_BEDRIJFSFINANCIERING_ONDERNEMERS_INITIATIEVEN,
            self::YOUR_EUROPE_CATEGORIEEN_OVERHEIDSOPDRACHTEN,
            self::YOUR_EUROPE_CATEGORIEEN_OVERHEIDSOPDRACHTEN_DEELNAME,
            self::YOUR_EUROPE_CATEGORIEEN_OVERHEIDSOPDRACHTEN_ONLINE_INSCHRIJVING,
            self::YOUR_EUROPE_CATEGORIEEN_OVERHEIDSOPDRACHTEN_MELDING_ONREGELMATIGHEDEN,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEID_VEILIGHEID_WERK,
            self::YOUR_EUROPE_CATEGORIEEN_GEZONDHEID_VEILIGHEID_WERK_VERPLICHTINGEN,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_GEBOORTE,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_GEBOORTE_BEWIJS,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERBLIJF,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERBLIJF_BEWIJS,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STUDIE,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STUDIE_AANVRAAG_TERTIAIR_ONDERWIJS,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STUDIE_VERZOEK_TOELATING_TERTIAIR_ONDERWIJS,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STUDIE_VERZOEK_ERKENNING_DIPLOMA,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK_VERZOEK,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK_WIJZIGING_BEROEPSSITUATIE,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK_AANVRAAG_ZIEKTEVERZEKERINGSKAART,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_WERK_AANGIFTE_INKOMSTENBELASTING,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING_ADRESWIJZIGING,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING_INSCHRIJVING_MOTORVOERTUIG,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING_STICKERS_WEGENINFRASTRUCTUUR,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_VERHUIZING_EMISSIESTICKERS,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_PENSIONERING,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_PENSIONERING_AANVRAAG_UITKERING,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_PENSIONERING_VERZOEK_OM_INFORMATIE,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_KENNISGEVING,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_PENSIOEN_EN_VERZEKERINGSREGELINGEN_WERKGEVER,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_PENSIOEN_EN_VERZEKERINGSREGELINGEN_WERKNEMER,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_AANGIFTE_VENNOOTSCHAPSBELASTING,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_BEEINDIGING_ARBEIDSOVEREENKOMST,
            self::YOUR_EUROPE_CATEGORIEEN_PROCEDURE_STARTEN_EXPLOITEREN_SLUITEN_BEDRIJF_BETALING_SOCIALE_BIJDRAGEN,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getSubsidiemaatregelAllowableValues()
    {
        return [
            self::SUBSIDIEMAATREGEL_CA,
            self::SUBSIDIEMAATREGEL_CB,
            self::SUBSIDIEMAATREGEL_CD,
            self::SUBSIDIEMAATREGEL_CE,
            self::SUBSIDIEMAATREGEL_EA,
            self::SUBSIDIEMAATREGEL_EB,
            self::SUBSIDIEMAATREGEL_EC,
            self::SUBSIDIEMAATREGEL_ED,
            self::SUBSIDIEMAATREGEL_EF,
            self::SUBSIDIEMAATREGEL_EG,
            self::SUBSIDIEMAATREGEL_EH,
            self::SUBSIDIEMAATREGEL_EI,
            self::SUBSIDIEMAATREGEL_EJ,
            self::SUBSIDIEMAATREGEL_EK,
            self::SUBSIDIEMAATREGEL_EL,
            self::SUBSIDIEMAATREGEL_EM,
            self::SUBSIDIEMAATREGEL_EN,
            self::SUBSIDIEMAATREGEL_EO,
            self::SUBSIDIEMAATREGEL_FA,
            self::SUBSIDIEMAATREGEL_FB,
            self::SUBSIDIEMAATREGEL_FC,
            self::SUBSIDIEMAATREGEL_FD,
            self::SUBSIDIEMAATREGEL_FE,
            self::SUBSIDIEMAATREGEL_FF,
            self::SUBSIDIEMAATREGEL_FG,
            self::SUBSIDIEMAATREGEL_FH,
            self::SUBSIDIEMAATREGEL_FI,
            self::SUBSIDIEMAATREGEL_GB,
            self::SUBSIDIEMAATREGEL_GC,
            self::SUBSIDIEMAATREGEL_GE_01,
            self::SUBSIDIEMAATREGEL_GE_02,
            self::SUBSIDIEMAATREGEL_GE_03,
            self::SUBSIDIEMAATREGEL_GE_04,
            self::SUBSIDIEMAATREGEL_GF,
            self::SUBSIDIEMAATREGEL_GH,
            self::SUBSIDIEMAATREGEL_GI,
            self::SUBSIDIEMAATREGEL_GJ,
            self::SUBSIDIEMAATREGEL_GK,
            self::SUBSIDIEMAATREGEL_GL,
            self::SUBSIDIEMAATREGEL_GM,
            self::SUBSIDIEMAATREGEL_GQ,
            self::SUBSIDIEMAATREGEL_GR_01,
            self::SUBSIDIEMAATREGEL_GR_02,
            self::SUBSIDIEMAATREGEL_GR_03,
            self::SUBSIDIEMAATREGEL_GR_04,
            self::SUBSIDIEMAATREGEL_GS_01,
            self::SUBSIDIEMAATREGEL_GS_02,
            self::SUBSIDIEMAATREGEL_GS_03,
            self::SUBSIDIEMAATREGEL_GS_04,
            self::SUBSIDIEMAATREGEL_GS_05,
            self::SUBSIDIEMAATREGEL_GS_06,
            self::SUBSIDIEMAATREGEL_GS_07,
            self::SUBSIDIEMAATREGEL_GS_08,
            self::SUBSIDIEMAATREGEL_GT_01,
            self::SUBSIDIEMAATREGEL_GT_02,
            self::SUBSIDIEMAATREGEL_GT_03,
            self::SUBSIDIEMAATREGEL_GT_04,
            self::SUBSIDIEMAATREGEL_GT_05,
            self::SUBSIDIEMAATREGEL_GT_06,
            self::SUBSIDIEMAATREGEL_GT_07,
            self::SUBSIDIEMAATREGEL_GT_08,
            self::SUBSIDIEMAATREGEL_GT_09,
            self::SUBSIDIEMAATREGEL_GT_10,
            self::SUBSIDIEMAATREGEL_GT_11,
            self::SUBSIDIEMAATREGEL_GU_01,
            self::SUBSIDIEMAATREGEL_GU_02,
            self::SUBSIDIEMAATREGEL_GU_03,
            self::SUBSIDIEMAATREGEL_GU_04,
            self::SUBSIDIEMAATREGEL_HA,
            self::SUBSIDIEMAATREGEL_HA_01,
            self::SUBSIDIEMAATREGEL_HA_02,
            self::SUBSIDIEMAATREGEL_HA_03,
            self::SUBSIDIEMAATREGEL_HA_04,
            self::SUBSIDIEMAATREGEL_HA_05,
            self::SUBSIDIEMAATREGEL_HA_06,
            self::SUBSIDIEMAATREGEL_HA_07,
            self::SUBSIDIEMAATREGEL_HB,
            self::SUBSIDIEMAATREGEL_HB_01,
            self::SUBSIDIEMAATREGEL_HB_02,
            self::SUBSIDIEMAATREGEL_HC_01,
            self::SUBSIDIEMAATREGEL_HC_02,
            self::SUBSIDIEMAATREGEL_HC_03,
            self::SUBSIDIEMAATREGEL_HC_04,
            self::SUBSIDIEMAATREGEL_HC_05,
            self::SUBSIDIEMAATREGEL_HC_06,
            self::SUBSIDIEMAATREGEL_HC_07,
            self::SUBSIDIEMAATREGEL_HC_08,
            self::SUBSIDIEMAATREGEL_HC_09,
            self::SUBSIDIEMAATREGEL_HC_10,
            self::SUBSIDIEMAATREGEL_HC_11,
            self::SUBSIDIEMAATREGEL_HD_01,
            self::SUBSIDIEMAATREGEL_HD_02,
            self::SUBSIDIEMAATREGEL_HD_03,
            self::SUBSIDIEMAATREGEL_HD_04,
            self::SUBSIDIEMAATREGEL_HD_05,
            self::SUBSIDIEMAATREGEL_HD_06,
            self::SUBSIDIEMAATREGEL_HD_07,
            self::SUBSIDIEMAATREGEL_HD_08,
            self::SUBSIDIEMAATREGEL_HE_01,
            self::SUBSIDIEMAATREGEL_HE_02,
            self::SUBSIDIEMAATREGEL_HE_03,
            self::SUBSIDIEMAATREGEL_HE_04,
            self::SUBSIDIEMAATREGEL_HF_01,
            self::SUBSIDIEMAATREGEL_HF_02,
            self::SUBSIDIEMAATREGEL_HF_03,
            self::SUBSIDIEMAATREGEL_HF_04,
            self::SUBSIDIEMAATREGEL_HF_05,
            self::SUBSIDIEMAATREGEL_HG_01,
            self::SUBSIDIEMAATREGEL_HG_02,
            self::SUBSIDIEMAATREGEL_HH,
            self::SUBSIDIEMAATREGEL_HI_01,
            self::SUBSIDIEMAATREGEL_HI_02,
            self::SUBSIDIEMAATREGEL_HI_03,
            self::SUBSIDIEMAATREGEL_HI_04,
            self::SUBSIDIEMAATREGEL_HJ,
            self::SUBSIDIEMAATREGEL_HK,
            self::SUBSIDIEMAATREGEL_HL,
            self::SUBSIDIEMAATREGEL_HM,
            self::SUBSIDIEMAATREGEL_HN,
            self::SUBSIDIEMAATREGEL_HO,
            self::SUBSIDIEMAATREGEL_HP,
            self::SUBSIDIEMAATREGEL_HQ,
            self::SUBSIDIEMAATREGEL_HR,
            self::SUBSIDIEMAATREGEL_HS,
            self::SUBSIDIEMAATREGEL_HT,
            self::SUBSIDIEMAATREGEL_HT_01,
            self::SUBSIDIEMAATREGEL_HT_02,
            self::SUBSIDIEMAATREGEL_HT_03,
            self::SUBSIDIEMAATREGEL_HT_04,
            self::SUBSIDIEMAATREGEL_HT_05,
            self::SUBSIDIEMAATREGEL_HT_06,
            self::SUBSIDIEMAATREGEL_HT_07,
            self::SUBSIDIEMAATREGEL_HT_08,
            self::SUBSIDIEMAATREGEL_HT_09,
            self::SUBSIDIEMAATREGEL_HT_10,
            self::SUBSIDIEMAATREGEL_HU,
            self::SUBSIDIEMAATREGEL_HU_01,
            self::SUBSIDIEMAATREGEL_HU_02,
            self::SUBSIDIEMAATREGEL_HU_03,
            self::SUBSIDIEMAATREGEL_HU_04,
            self::SUBSIDIEMAATREGEL_HU_05,
            self::SUBSIDIEMAATREGEL_HU_06,
            self::SUBSIDIEMAATREGEL_HU_07,
            self::SUBSIDIEMAATREGEL_HU_08,
            self::SUBSIDIEMAATREGEL_HV,
            self::SUBSIDIEMAATREGEL_HV_01,
            self::SUBSIDIEMAATREGEL_HV_02,
            self::SUBSIDIEMAATREGEL_HV_03,
            self::SUBSIDIEMAATREGEL_HV_04,
            self::SUBSIDIEMAATREGEL_HV_05,
            self::SUBSIDIEMAATREGEL_HV_06,
            self::SUBSIDIEMAATREGEL_HW,
            self::SUBSIDIEMAATREGEL_HX,
            self::SUBSIDIEMAATREGEL_JA,
            self::SUBSIDIEMAATREGEL_JC,
            self::SUBSIDIEMAATREGEL_JE,
            self::SUBSIDIEMAATREGEL_JF,
            self::SUBSIDIEMAATREGEL_JG,
            self::SUBSIDIEMAATREGEL_JH,
            self::SUBSIDIEMAATREGEL_JI,
            self::SUBSIDIEMAATREGEL_KA,
            self::SUBSIDIEMAATREGEL_KB_01,
            self::SUBSIDIEMAATREGEL_KB_02,
            self::SUBSIDIEMAATREGEL_KB_03,
            self::SUBSIDIEMAATREGEL_KD,
            self::SUBSIDIEMAATREGEL_KE,
            self::SUBSIDIEMAATREGEL_KF,
            self::SUBSIDIEMAATREGEL_MB,
            self::SUBSIDIEMAATREGEL_MC,
            self::SUBSIDIEMAATREGEL_MD,
            self::SUBSIDIEMAATREGEL_ME,
            self::SUBSIDIEMAATREGEL_MK,
            self::SUBSIDIEMAATREGEL_ML,
            self::SUBSIDIEMAATREGEL_MM,
            self::SUBSIDIEMAATREGEL_MN,
            self::SUBSIDIEMAATREGEL_MO,
            self::SUBSIDIEMAATREGEL_MP,
            self::SUBSIDIEMAATREGEL_MQ,
            self::SUBSIDIEMAATREGEL_MR,
            self::SUBSIDIEMAATREGEL_MS,
            self::SUBSIDIEMAATREGEL_MT,
            self::SUBSIDIEMAATREGEL_MU,
            self::SUBSIDIEMAATREGEL_MV,
            self::SUBSIDIEMAATREGEL_MW,
            self::SUBSIDIEMAATREGEL_QA,
            self::SUBSIDIEMAATREGEL_QB,
            self::SUBSIDIEMAATREGEL_QC,
            self::SUBSIDIEMAATREGEL_QD,
            self::SUBSIDIEMAATREGEL_QE,
            self::SUBSIDIEMAATREGEL_QF,
            self::SUBSIDIEMAATREGEL_QG,
            self::SUBSIDIEMAATREGEL_QH,
            self::SUBSIDIEMAATREGEL_QI,
            self::SUBSIDIEMAATREGEL_QJ,
            self::SUBSIDIEMAATREGEL_QK,
            self::SUBSIDIEMAATREGEL_QM,
            self::SUBSIDIEMAATREGEL_QN,
            self::SUBSIDIEMAATREGEL_QO,
            self::SUBSIDIEMAATREGEL_QP,
            self::SUBSIDIEMAATREGEL_QQ,
            self::SUBSIDIEMAATREGEL_QR,
            self::SUBSIDIEMAATREGEL_QT,
            self::SUBSIDIEMAATREGEL_SA,
            self::SUBSIDIEMAATREGEL_SB,
            self::SUBSIDIEMAATREGEL_SC,
            self::SUBSIDIEMAATREGEL_SD,
            self::SUBSIDIEMAATREGEL_SE,
            self::SUBSIDIEMAATREGEL_SF,
            self::SUBSIDIEMAATREGEL_SG_01,
            self::SUBSIDIEMAATREGEL_SG_02,
            self::SUBSIDIEMAATREGEL_SH_01,
            self::SUBSIDIEMAATREGEL_SH_02,
            self::SUBSIDIEMAATREGEL_SI,
            self::SUBSIDIEMAATREGEL_SJ_01,
            self::SUBSIDIEMAATREGEL_SJ_02,
            self::SUBSIDIEMAATREGEL_SJ_03,
            self::SUBSIDIEMAATREGEL_SJ_04,
            self::SUBSIDIEMAATREGEL_SL,
            self::SUBSIDIEMAATREGEL_SM,
            self::SUBSIDIEMAATREGEL_SN,
            self::SUBSIDIEMAATREGEL_SO,
            self::SUBSIDIEMAATREGEL_SP,
            self::SUBSIDIEMAATREGEL_SQ,
            self::SUBSIDIEMAATREGEL_SR,
            self::SUBSIDIEMAATREGEL_SS,
            self::SUBSIDIEMAATREGEL_ST,
            self::SUBSIDIEMAATREGEL_SU,
            self::SUBSIDIEMAATREGEL_SW,
            self::SUBSIDIEMAATREGEL_SZ,
            self::SUBSIDIEMAATREGEL_TA,
            self::SUBSIDIEMAATREGEL_TB,
            self::SUBSIDIEMAATREGEL_TC,
            self::SUBSIDIEMAATREGEL_TD,
            self::SUBSIDIEMAATREGEL_TF,
            self::SUBSIDIEMAATREGEL_TG,
            self::SUBSIDIEMAATREGEL_TH,
            self::SUBSIDIEMAATREGEL_TI,
            self::SUBSIDIEMAATREGEL_TJ,
            self::SUBSIDIEMAATREGEL_TK,
            self::SUBSIDIEMAATREGEL_TL,
            self::SUBSIDIEMAATREGEL_TM,
            self::SUBSIDIEMAATREGEL_TN,
            self::SUBSIDIEMAATREGEL_TO,
            self::SUBSIDIEMAATREGEL_TQ,
            self::SUBSIDIEMAATREGEL_TR,
            self::SUBSIDIEMAATREGEL_TS,
            self::SUBSIDIEMAATREGEL_TT,
            self::SUBSIDIEMAATREGEL_TU,
            self::SUBSIDIEMAATREGEL_TV,
            self::SUBSIDIEMAATREGEL_TW,
            self::SUBSIDIEMAATREGEL_TX,
            self::SUBSIDIEMAATREGEL_TY,
            self::SUBSIDIEMAATREGEL_VB,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('id', $data ?? [], null);
        $this->setIfExists('at_context', $data ?? [], null);
        $this->setIfExists('at_id', $data ?? [], null);
        $this->setIfExists('at_type', $data ?? [], null);
        $this->setIfExists('bevoegd_bestuursniveaus', $data ?? [], null);
        $this->setIfExists('uitvoerend_bestuursniveaus', $data ?? [], null);
        $this->setIfExists('naam', $data ?? [], null);
        $this->setIfExists('beschrijving', $data ?? [], null);
        $this->setIfExists('verdere_beschrijving', $data ?? [], null);
        $this->setIfExists('start_dienst_verlening', $data ?? [], null);
        $this->setIfExists('einde_dienst_verlening', $data ?? [], null);
        $this->setIfExists('publicatiekanalen', $data ?? [], null);
        $this->setIfExists('cases', $data ?? [], null);
        $this->setIfExists('type', $data ?? [], null);
        $this->setIfExists('tags', $data ?? [], null);
        $this->setIfExists('themas', $data ?? [], null);
        $this->setIfExists('doelgroepen', $data ?? [], null);
        $this->setIfExists('talen', $data ?? [], null);
        $this->setIfExists('geografisch_toepassingsgebieden', $data ?? [], null);
        $this->setIfExists('your_europe_categorieen', $data ?? [], null);
        $this->setIfExists('regelgeving_tekst', $data ?? [], null);
        $this->setIfExists('uitzonderingen', $data ?? [], null);
        $this->setIfExists('aangemaakt_door', $data ?? [], null);
        $this->setIfExists('zoektermen', $data ?? [], null);
        $this->setIfExists('bevoegde_overheden', $data ?? [], null);
        $this->setIfExists('uitvoerende_overheden', $data ?? [], null);
        $this->setIfExists('contact_overheden', $data ?? [], null);
        $this->setIfExists('contact_beschrijving', $data ?? [], null);
        $this->setIfExists('sociale_kaart_organisaties', $data ?? [], null);
        $this->setIfExists('voorwaarden', $data ?? [], null);
        $this->setIfExists('procedures', $data ?? [], null);
        $this->setIfExists('websites', $data ?? [], null);
        $this->setIfExists('kosten', $data ?? [], null);
        $this->setIfExists('financiele_voordelen', $data ?? [], null);
        $this->setIfExists('regelgeving', $data ?? [], null);
        $this->setIfExists('contactgegevens', $data ?? [], null);
        $this->setIfExists('creatie', $data ?? [], null);
        $this->setIfExists('laatst_gewijzigd', $data ?? [], null);
        $this->setIfExists('laatst_ontvangen', $data ?? [], null);
        $this->setIfExists('linked_concept', $data ?? [], null);
        $this->setIfExists('linked_concept_id', $data ?? [], null);
        $this->setIfExists('linked_concept_productnummer', $data ?? [], null);
        $this->setIfExists('productnummer', $data ?? [], null);
        $this->setIfExists('gearchiveerd', $data ?? [], null);
        $this->setIfExists('machine_leesbare_voorwaarden', $data ?? [], null);
        $this->setIfExists('verrijking', $data ?? [], null);
        $this->setIfExists('subsidiemaatregel', $data ?? [], null);
        $this->setIfExists('publicatie_link', $data ?? [], null);
        $this->setIfExists('metadata', $data ?? [], null);
        $this->setIfExists('verwante_producten', $data ?? [], null);
        $this->setIfExists('deminimis', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getTypeAllowableValues();
        if (!is_null($this->container['type']) && !in_array($this->container['type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'type', must be one of '%s'",
                $this->container['type'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getSubsidiemaatregelAllowableValues();
        if (!is_null($this->container['subsidiemaatregel']) && !in_array($this->container['subsidiemaatregel'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'subsidiemaatregel', must be one of '%s'",
                $this->container['subsidiemaatregel'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        if (is_null($id)) {
            throw new \InvalidArgumentException('non-nullable id cannot be null');
        }
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets at_context
     *
     * @return string[]|null
     */
    public function getAtContext()
    {
        return $this->container['at_context'];
    }

    /**
     * Sets at_context
     *
     * @param string[]|null $at_context at_context
     *
     * @return self
     */
    public function setAtContext($at_context)
    {
        if (is_null($at_context)) {
            throw new \InvalidArgumentException('non-nullable at_context cannot be null');
        }
        $this->container['at_context'] = $at_context;

        return $this;
    }

    /**
     * Gets at_id
     *
     * @return string|null
     */
    public function getAtId()
    {
        return $this->container['at_id'];
    }

    /**
     * Sets at_id
     *
     * @param string|null $at_id at_id
     *
     * @return self
     */
    public function setAtId($at_id)
    {
        if (is_null($at_id)) {
            throw new \InvalidArgumentException('non-nullable at_id cannot be null');
        }
        $this->container['at_id'] = $at_id;

        return $this;
    }

    /**
     * Gets at_type
     *
     * @return string|null
     */
    public function getAtType()
    {
        return $this->container['at_type'];
    }

    /**
     * Sets at_type
     *
     * @param string|null $at_type at_type
     *
     * @return self
     */
    public function setAtType($at_type)
    {
        if (is_null($at_type)) {
            throw new \InvalidArgumentException('non-nullable at_type cannot be null');
        }
        $this->container['at_type'] = $at_type;

        return $this;
    }

    /**
     * Gets bevoegd_bestuursniveaus
     *
     * @return object[]|null
     */
    public function getBevoegdBestuursniveaus()
    {
        return $this->container['bevoegd_bestuursniveaus'];
    }

    /**
     * Sets bevoegd_bestuursniveaus
     *
     * @param object[]|null $bevoegd_bestuursniveaus bevoegd_bestuursniveaus
     *
     * @return self
     */
    public function setBevoegdBestuursniveaus($bevoegd_bestuursniveaus)
    {
        if (is_null($bevoegd_bestuursniveaus)) {
            throw new \InvalidArgumentException('non-nullable bevoegd_bestuursniveaus cannot be null');
        }
        $allowedValues = $this->getBevoegdBestuursniveausAllowableValues();
        if (array_diff($bevoegd_bestuursniveaus, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'bevoegd_bestuursniveaus', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['bevoegd_bestuursniveaus'] = $bevoegd_bestuursniveaus;

        return $this;
    }

    /**
     * Gets uitvoerend_bestuursniveaus
     *
     * @return object[]|null
     */
    public function getUitvoerendBestuursniveaus()
    {
        return $this->container['uitvoerend_bestuursniveaus'];
    }

    /**
     * Sets uitvoerend_bestuursniveaus
     *
     * @param object[]|null $uitvoerend_bestuursniveaus uitvoerend_bestuursniveaus
     *
     * @return self
     */
    public function setUitvoerendBestuursniveaus($uitvoerend_bestuursniveaus)
    {
        if (is_null($uitvoerend_bestuursniveaus)) {
            throw new \InvalidArgumentException('non-nullable uitvoerend_bestuursniveaus cannot be null');
        }
        $allowedValues = $this->getUitvoerendBestuursniveausAllowableValues();
        if (array_diff($uitvoerend_bestuursniveaus, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'uitvoerend_bestuursniveaus', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['uitvoerend_bestuursniveaus'] = $uitvoerend_bestuursniveaus;

        return $this;
    }

    /**
     * Gets naam
     *
     * @return object|null
     */
    public function getNaam()
    {
        return $this->container['naam'];
    }

    /**
     * Sets naam
     *
     * @param object|null $naam naam
     *
     * @return self
     */
    public function setNaam($naam)
    {
        if (is_null($naam)) {
            throw new \InvalidArgumentException('non-nullable naam cannot be null');
        }
        $this->container['naam'] = $naam;

        return $this;
    }

    /**
     * Gets beschrijving
     *
     * @return object|null
     */
    public function getBeschrijving()
    {
        return $this->container['beschrijving'];
    }

    /**
     * Sets beschrijving
     *
     * @param object|null $beschrijving beschrijving
     *
     * @return self
     */
    public function setBeschrijving($beschrijving)
    {
        if (is_null($beschrijving)) {
            throw new \InvalidArgumentException('non-nullable beschrijving cannot be null');
        }
        $this->container['beschrijving'] = $beschrijving;

        return $this;
    }

    /**
     * Gets verdere_beschrijving
     *
     * @return object|null
     */
    public function getVerdereBeschrijving()
    {
        return $this->container['verdere_beschrijving'];
    }

    /**
     * Sets verdere_beschrijving
     *
     * @param object|null $verdere_beschrijving verdere_beschrijving
     *
     * @return self
     */
    public function setVerdereBeschrijving($verdere_beschrijving)
    {
        if (is_null($verdere_beschrijving)) {
            throw new \InvalidArgumentException('non-nullable verdere_beschrijving cannot be null');
        }
        $this->container['verdere_beschrijving'] = $verdere_beschrijving;

        return $this;
    }

    /**
     * Gets start_dienst_verlening
     *
     * @return \DateTime|null
     */
    public function getStartDienstVerlening()
    {
        return $this->container['start_dienst_verlening'];
    }

    /**
     * Sets start_dienst_verlening
     *
     * @param \DateTime|null $start_dienst_verlening start_dienst_verlening
     *
     * @return self
     */
    public function setStartDienstVerlening($start_dienst_verlening)
    {
        if (is_null($start_dienst_verlening)) {
            throw new \InvalidArgumentException('non-nullable start_dienst_verlening cannot be null');
        }
        $this->container['start_dienst_verlening'] = $start_dienst_verlening;

        return $this;
    }

    /**
     * Gets einde_dienst_verlening
     *
     * @return \DateTime|null
     */
    public function getEindeDienstVerlening()
    {
        return $this->container['einde_dienst_verlening'];
    }

    /**
     * Sets einde_dienst_verlening
     *
     * @param \DateTime|null $einde_dienst_verlening einde_dienst_verlening
     *
     * @return self
     */
    public function setEindeDienstVerlening($einde_dienst_verlening)
    {
        if (is_null($einde_dienst_verlening)) {
            throw new \InvalidArgumentException('non-nullable einde_dienst_verlening cannot be null');
        }
        $this->container['einde_dienst_verlening'] = $einde_dienst_verlening;

        return $this;
    }

    /**
     * Gets publicatiekanalen
     *
     * @return object[]|null
     */
    public function getPublicatiekanalen()
    {
        return $this->container['publicatiekanalen'];
    }

    /**
     * Sets publicatiekanalen
     *
     * @param object[]|null $publicatiekanalen publicatiekanalen
     *
     * @return self
     */
    public function setPublicatiekanalen($publicatiekanalen)
    {
        if (is_null($publicatiekanalen)) {
            throw new \InvalidArgumentException('non-nullable publicatiekanalen cannot be null');
        }
        $allowedValues = $this->getPublicatiekanalenAllowableValues();
        if (array_diff($publicatiekanalen, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'publicatiekanalen', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['publicatiekanalen'] = $publicatiekanalen;

        return $this;
    }

    /**
     * Gets cases
     *
     * @return \OpenAPI\Client\Model\CaseId[]|null
     */
    public function getCases()
    {
        return $this->container['cases'];
    }

    /**
     * Sets cases
     *
     * @param \OpenAPI\Client\Model\CaseId[]|null $cases cases
     *
     * @return self
     */
    public function setCases($cases)
    {
        if (is_null($cases)) {
            throw new \InvalidArgumentException('non-nullable cases cannot be null');
        }


        $this->container['cases'] = $cases;

        return $this;
    }

    /**
     * Gets type
     *
     * @return object|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param object|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        if (is_null($type)) {
            throw new \InvalidArgumentException('non-nullable type cannot be null');
        }
        $allowedValues = $this->getTypeAllowableValues();
        if (!in_array($type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'type', must be one of '%s'",
                    $type,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return object[]|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param object[]|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        if (is_null($tags)) {
            throw new \InvalidArgumentException('non-nullable tags cannot be null');
        }
        $allowedValues = $this->getTagsAllowableValues();
        if (array_diff($tags, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'tags', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets themas
     *
     * @return object[]|null
     */
    public function getThemas()
    {
        return $this->container['themas'];
    }

    /**
     * Sets themas
     *
     * @param object[]|null $themas themas
     *
     * @return self
     */
    public function setThemas($themas)
    {
        if (is_null($themas)) {
            throw new \InvalidArgumentException('non-nullable themas cannot be null');
        }
        $allowedValues = $this->getThemasAllowableValues();
        if (array_diff($themas, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'themas', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['themas'] = $themas;

        return $this;
    }

    /**
     * Gets doelgroepen
     *
     * @return object[]|null
     */
    public function getDoelgroepen()
    {
        return $this->container['doelgroepen'];
    }

    /**
     * Sets doelgroepen
     *
     * @param object[]|null $doelgroepen doelgroepen
     *
     * @return self
     */
    public function setDoelgroepen($doelgroepen)
    {
        if (is_null($doelgroepen)) {
            throw new \InvalidArgumentException('non-nullable doelgroepen cannot be null');
        }
        $allowedValues = $this->getDoelgroepenAllowableValues();
        if (array_diff($doelgroepen, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'doelgroepen', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['doelgroepen'] = $doelgroepen;

        return $this;
    }

    /**
     * Gets talen
     *
     * @return object[]|null
     */
    public function getTalen()
    {
        return $this->container['talen'];
    }

    /**
     * Sets talen
     *
     * @param object[]|null $talen talen
     *
     * @return self
     */
    public function setTalen($talen)
    {
        if (is_null($talen)) {
            throw new \InvalidArgumentException('non-nullable talen cannot be null');
        }
        $allowedValues = $this->getTalenAllowableValues();
        if (array_diff($talen, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'talen', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['talen'] = $talen;

        return $this;
    }

    /**
     * Gets geografisch_toepassingsgebieden
     *
     * @return object[]|null
     */
    public function getGeografischToepassingsgebieden()
    {
        return $this->container['geografisch_toepassingsgebieden'];
    }

    /**
     * Sets geografisch_toepassingsgebieden
     *
     * @param object[]|null $geografisch_toepassingsgebieden geografisch_toepassingsgebieden
     *
     * @return self
     */
    public function setGeografischToepassingsgebieden($geografisch_toepassingsgebieden)
    {
        if (is_null($geografisch_toepassingsgebieden)) {
            throw new \InvalidArgumentException('non-nullable geografisch_toepassingsgebieden cannot be null');
        }
        $allowedValues = $this->getGeografischToepassingsgebiedenAllowableValues();
        if (array_diff($geografisch_toepassingsgebieden, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'geografisch_toepassingsgebieden', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['geografisch_toepassingsgebieden'] = $geografisch_toepassingsgebieden;

        return $this;
    }

    /**
     * Gets your_europe_categorieen
     *
     * @return object[]|null
     */
    public function getYourEuropeCategorieen()
    {
        return $this->container['your_europe_categorieen'];
    }

    /**
     * Sets your_europe_categorieen
     *
     * @param object[]|null $your_europe_categorieen your_europe_categorieen
     *
     * @return self
     */
    public function setYourEuropeCategorieen($your_europe_categorieen)
    {
        if (is_null($your_europe_categorieen)) {
            throw new \InvalidArgumentException('non-nullable your_europe_categorieen cannot be null');
        }
        $allowedValues = $this->getYourEuropeCategorieenAllowableValues();
        if (array_diff($your_europe_categorieen, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'your_europe_categorieen', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }


        $this->container['your_europe_categorieen'] = $your_europe_categorieen;

        return $this;
    }

    /**
     * Gets regelgeving_tekst
     *
     * @return object|null
     */
    public function getRegelgevingTekst()
    {
        return $this->container['regelgeving_tekst'];
    }

    /**
     * Sets regelgeving_tekst
     *
     * @param object|null $regelgeving_tekst regelgeving_tekst
     *
     * @return self
     */
    public function setRegelgevingTekst($regelgeving_tekst)
    {
        if (is_null($regelgeving_tekst)) {
            throw new \InvalidArgumentException('non-nullable regelgeving_tekst cannot be null');
        }
        $this->container['regelgeving_tekst'] = $regelgeving_tekst;

        return $this;
    }

    /**
     * Gets uitzonderingen
     *
     * @return object|null
     */
    public function getUitzonderingen()
    {
        return $this->container['uitzonderingen'];
    }

    /**
     * Sets uitzonderingen
     *
     * @param object|null $uitzonderingen uitzonderingen
     *
     * @return self
     */
    public function setUitzonderingen($uitzonderingen)
    {
        if (is_null($uitzonderingen)) {
            throw new \InvalidArgumentException('non-nullable uitzonderingen cannot be null');
        }
        $this->container['uitzonderingen'] = $uitzonderingen;

        return $this;
    }

    /**
     * Gets aangemaakt_door
     *
     * @return \OpenAPI\Client\Model\PubliekeOrganisatieJson|null
     */
    public function getAangemaaktDoor()
    {
        return $this->container['aangemaakt_door'];
    }

    /**
     * Sets aangemaakt_door
     *
     * @param \OpenAPI\Client\Model\PubliekeOrganisatieJson|null $aangemaakt_door aangemaakt_door
     *
     * @return self
     */
    public function setAangemaaktDoor($aangemaakt_door)
    {
        if (is_null($aangemaakt_door)) {
            throw new \InvalidArgumentException('non-nullable aangemaakt_door cannot be null');
        }
        $this->container['aangemaakt_door'] = $aangemaakt_door;

        return $this;
    }

    /**
     * Gets zoektermen
     *
     * @return object|null
     */
    public function getZoektermen()
    {
        return $this->container['zoektermen'];
    }

    /**
     * Sets zoektermen
     *
     * @param object|null $zoektermen zoektermen
     *
     * @return self
     */
    public function setZoektermen($zoektermen)
    {
        if (is_null($zoektermen)) {
            throw new \InvalidArgumentException('non-nullable zoektermen cannot be null');
        }
        $this->container['zoektermen'] = $zoektermen;

        return $this;
    }

    /**
     * Gets bevoegde_overheden
     *
     * @return \OpenAPI\Client\Model\PubliekeOrganisatieJson[]|null
     */
    public function getBevoegdeOverheden()
    {
        return $this->container['bevoegde_overheden'];
    }

    /**
     * Sets bevoegde_overheden
     *
     * @param \OpenAPI\Client\Model\PubliekeOrganisatieJson[]|null $bevoegde_overheden bevoegde_overheden
     *
     * @return self
     */
    public function setBevoegdeOverheden($bevoegde_overheden)
    {
        if (is_null($bevoegde_overheden)) {
            throw new \InvalidArgumentException('non-nullable bevoegde_overheden cannot be null');
        }
        $this->container['bevoegde_overheden'] = $bevoegde_overheden;

        return $this;
    }

    /**
     * Gets uitvoerende_overheden
     *
     * @return \OpenAPI\Client\Model\PubliekeOrganisatieJson[]|null
     */
    public function getUitvoerendeOverheden()
    {
        return $this->container['uitvoerende_overheden'];
    }

    /**
     * Sets uitvoerende_overheden
     *
     * @param \OpenAPI\Client\Model\PubliekeOrganisatieJson[]|null $uitvoerende_overheden uitvoerende_overheden
     *
     * @return self
     */
    public function setUitvoerendeOverheden($uitvoerende_overheden)
    {
        if (is_null($uitvoerende_overheden)) {
            throw new \InvalidArgumentException('non-nullable uitvoerende_overheden cannot be null');
        }
        $this->container['uitvoerende_overheden'] = $uitvoerende_overheden;

        return $this;
    }

    /**
     * Gets contact_overheden
     *
     * @return \OpenAPI\Client\Model\ContactOrganisatieJson[]|null
     */
    public function getContactOverheden()
    {
        return $this->container['contact_overheden'];
    }

    /**
     * Sets contact_overheden
     *
     * @param \OpenAPI\Client\Model\ContactOrganisatieJson[]|null $contact_overheden contact_overheden
     *
     * @return self
     */
    public function setContactOverheden($contact_overheden)
    {
        if (is_null($contact_overheden)) {
            throw new \InvalidArgumentException('non-nullable contact_overheden cannot be null');
        }
        $this->container['contact_overheden'] = $contact_overheden;

        return $this;
    }

    /**
     * Gets contact_beschrijving
     *
     * @return object|null
     */
    public function getContactBeschrijving()
    {
        return $this->container['contact_beschrijving'];
    }

    /**
     * Sets contact_beschrijving
     *
     * @param object|null $contact_beschrijving contact_beschrijving
     *
     * @return self
     */
    public function setContactBeschrijving($contact_beschrijving)
    {
        if (is_null($contact_beschrijving)) {
            throw new \InvalidArgumentException('non-nullable contact_beschrijving cannot be null');
        }
        $this->container['contact_beschrijving'] = $contact_beschrijving;

        return $this;
    }

    /**
     * Gets sociale_kaart_organisaties
     *
     * @return \OpenAPI\Client\Model\SocialeKaartOrganisatie[]|null
     */
    public function getSocialeKaartOrganisaties()
    {
        return $this->container['sociale_kaart_organisaties'];
    }

    /**
     * Sets sociale_kaart_organisaties
     *
     * @param \OpenAPI\Client\Model\SocialeKaartOrganisatie[]|null $sociale_kaart_organisaties sociale_kaart_organisaties
     *
     * @return self
     */
    public function setSocialeKaartOrganisaties($sociale_kaart_organisaties)
    {
        if (is_null($sociale_kaart_organisaties)) {
            throw new \InvalidArgumentException('non-nullable sociale_kaart_organisaties cannot be null');
        }
        $this->container['sociale_kaart_organisaties'] = $sociale_kaart_organisaties;

        return $this;
    }

    /**
     * Gets voorwaarden
     *
     * @return \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedVoorwaardeJson[]|null
     */
    public function getVoorwaarden()
    {
        return $this->container['voorwaarden'];
    }

    /**
     * Sets voorwaarden
     *
     * @param \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedVoorwaardeJson[]|null $voorwaarden voorwaarden
     *
     * @return self
     */
    public function setVoorwaarden($voorwaarden)
    {
        if (is_null($voorwaarden)) {
            throw new \InvalidArgumentException('non-nullable voorwaarden cannot be null');
        }
        $this->container['voorwaarden'] = $voorwaarden;

        return $this;
    }

    /**
     * Gets procedures
     *
     * @return \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedProcedureJson[]|null
     */
    public function getProcedures()
    {
        return $this->container['procedures'];
    }

    /**
     * Sets procedures
     *
     * @param \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedProcedureJson[]|null $procedures procedures
     *
     * @return self
     */
    public function setProcedures($procedures)
    {
        if (is_null($procedures)) {
            throw new \InvalidArgumentException('non-nullable procedures cannot be null');
        }
        $this->container['procedures'] = $procedures;

        return $this;
    }

    /**
     * Gets websites
     *
     * @return \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedWebsite[]|null
     */
    public function getWebsites()
    {
        return $this->container['websites'];
    }

    /**
     * Sets websites
     *
     * @param \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedWebsite[]|null $websites websites
     *
     * @return self
     */
    public function setWebsites($websites)
    {
        if (is_null($websites)) {
            throw new \InvalidArgumentException('non-nullable websites cannot be null');
        }
        $this->container['websites'] = $websites;

        return $this;
    }

    /**
     * Gets kosten
     *
     * @return \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedKost[]|null
     */
    public function getKosten()
    {
        return $this->container['kosten'];
    }

    /**
     * Sets kosten
     *
     * @param \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedKost[]|null $kosten kosten
     *
     * @return self
     */
    public function setKosten($kosten)
    {
        if (is_null($kosten)) {
            throw new \InvalidArgumentException('non-nullable kosten cannot be null');
        }
        $this->container['kosten'] = $kosten;

        return $this;
    }

    /**
     * Gets financiele_voordelen
     *
     * @return \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedFinancieelVoordeel[]|null
     */
    public function getFinancieleVoordelen()
    {
        return $this->container['financiele_voordelen'];
    }

    /**
     * Sets financiele_voordelen
     *
     * @param \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedFinancieelVoordeel[]|null $financiele_voordelen financiele_voordelen
     *
     * @return self
     */
    public function setFinancieleVoordelen($financiele_voordelen)
    {
        if (is_null($financiele_voordelen)) {
            throw new \InvalidArgumentException('non-nullable financiele_voordelen cannot be null');
        }
        $this->container['financiele_voordelen'] = $financiele_voordelen;

        return $this;
    }

    /**
     * Gets regelgeving
     *
     * @return \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedRegelgevingJson[]|null
     */
    public function getRegelgeving()
    {
        return $this->container['regelgeving'];
    }

    /**
     * Sets regelgeving
     *
     * @param \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedRegelgevingJson[]|null $regelgeving regelgeving
     *
     * @return self
     */
    public function setRegelgeving($regelgeving)
    {
        if (is_null($regelgeving)) {
            throw new \InvalidArgumentException('non-nullable regelgeving cannot be null');
        }
        $this->container['regelgeving'] = $regelgeving;

        return $this;
    }

    /**
     * Gets contactgegevens
     *
     * @return \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedContactgegevensJson[]|null
     */
    public function getContactgegevens()
    {
        return $this->container['contactgegevens'];
    }

    /**
     * Sets contactgegevens
     *
     * @param \OpenAPI\Client\Model\ShaclOrderedJsonLdTypedContactgegevensJson[]|null $contactgegevens contactgegevens
     *
     * @return self
     */
    public function setContactgegevens($contactgegevens)
    {
        if (is_null($contactgegevens)) {
            throw new \InvalidArgumentException('non-nullable contactgegevens cannot be null');
        }
        $this->container['contactgegevens'] = $contactgegevens;

        return $this;
    }

    /**
     * Gets creatie
     *
     * @return \DateTime|null
     */
    public function getCreatie()
    {
        return $this->container['creatie'];
    }

    /**
     * Sets creatie
     *
     * @param \DateTime|null $creatie creatie
     *
     * @return self
     */
    public function setCreatie($creatie)
    {
        if (is_null($creatie)) {
            throw new \InvalidArgumentException('non-nullable creatie cannot be null');
        }
        $this->container['creatie'] = $creatie;

        return $this;
    }

    /**
     * Gets laatst_gewijzigd
     *
     * @return \DateTime|null
     */
    public function getLaatstGewijzigd()
    {
        return $this->container['laatst_gewijzigd'];
    }

    /**
     * Sets laatst_gewijzigd
     *
     * @param \DateTime|null $laatst_gewijzigd laatst_gewijzigd
     *
     * @return self
     */
    public function setLaatstGewijzigd($laatst_gewijzigd)
    {
        if (is_null($laatst_gewijzigd)) {
            throw new \InvalidArgumentException('non-nullable laatst_gewijzigd cannot be null');
        }
        $this->container['laatst_gewijzigd'] = $laatst_gewijzigd;

        return $this;
    }

    /**
     * Gets laatst_ontvangen
     *
     * @return \DateTime|null
     */
    public function getLaatstOntvangen()
    {
        return $this->container['laatst_ontvangen'];
    }

    /**
     * Sets laatst_ontvangen
     *
     * @param \DateTime|null $laatst_ontvangen laatst_ontvangen
     *
     * @return self
     */
    public function setLaatstOntvangen($laatst_ontvangen)
    {
        if (is_null($laatst_ontvangen)) {
            throw new \InvalidArgumentException('non-nullable laatst_ontvangen cannot be null');
        }
        $this->container['laatst_ontvangen'] = $laatst_ontvangen;

        return $this;
    }

    /**
     * Gets linked_concept
     *
     * @return string|null
     */
    public function getLinkedConcept()
    {
        return $this->container['linked_concept'];
    }

    /**
     * Sets linked_concept
     *
     * @param string|null $linked_concept linked_concept
     *
     * @return self
     */
    public function setLinkedConcept($linked_concept)
    {
        if (is_null($linked_concept)) {
            throw new \InvalidArgumentException('non-nullable linked_concept cannot be null');
        }
        $this->container['linked_concept'] = $linked_concept;

        return $this;
    }

    /**
     * Gets linked_concept_id
     *
     * @return object|null
     */
    public function getLinkedConceptId()
    {
        return $this->container['linked_concept_id'];
    }

    /**
     * Sets linked_concept_id
     *
     * @param object|null $linked_concept_id linked_concept_id
     *
     * @return self
     */
    public function setLinkedConceptId($linked_concept_id)
    {
        if (is_null($linked_concept_id)) {
            throw new \InvalidArgumentException('non-nullable linked_concept_id cannot be null');
        }
        $this->container['linked_concept_id'] = $linked_concept_id;

        return $this;
    }

    /**
     * Gets linked_concept_productnummer
     *
     * @return string|null
     */
    public function getLinkedConceptProductnummer()
    {
        return $this->container['linked_concept_productnummer'];
    }

    /**
     * Sets linked_concept_productnummer
     *
     * @param string|null $linked_concept_productnummer linked_concept_productnummer
     *
     * @return self
     */
    public function setLinkedConceptProductnummer($linked_concept_productnummer)
    {
        if (is_null($linked_concept_productnummer)) {
            throw new \InvalidArgumentException('non-nullable linked_concept_productnummer cannot be null');
        }
        $this->container['linked_concept_productnummer'] = $linked_concept_productnummer;

        return $this;
    }

    /**
     * Gets productnummer
     *
     * @return object|null
     */
    public function getProductnummer()
    {
        return $this->container['productnummer'];
    }

    /**
     * Sets productnummer
     *
     * @param object|null $productnummer productnummer
     *
     * @return self
     */
    public function setProductnummer($productnummer)
    {
        if (is_null($productnummer)) {
            throw new \InvalidArgumentException('non-nullable productnummer cannot be null');
        }
        $this->container['productnummer'] = $productnummer;

        return $this;
    }

    /**
     * Gets gearchiveerd
     *
     * @return bool|null
     */
    public function getGearchiveerd()
    {
        return $this->container['gearchiveerd'];
    }

    /**
     * Sets gearchiveerd
     *
     * @param bool|null $gearchiveerd gearchiveerd
     *
     * @return self
     */
    public function setGearchiveerd($gearchiveerd)
    {
        if (is_null($gearchiveerd)) {
            throw new \InvalidArgumentException('non-nullable gearchiveerd cannot be null');
        }
        $this->container['gearchiveerd'] = $gearchiveerd;

        return $this;
    }

    /**
     * Gets machine_leesbare_voorwaarden
     *
     * @return \OpenAPI\Client\Model\VoorwaardenSetJson[]|null
     */
    public function getMachineLeesbareVoorwaarden()
    {
        return $this->container['machine_leesbare_voorwaarden'];
    }

    /**
     * Sets machine_leesbare_voorwaarden
     *
     * @param \OpenAPI\Client\Model\VoorwaardenSetJson[]|null $machine_leesbare_voorwaarden machine_leesbare_voorwaarden
     *
     * @return self
     */
    public function setMachineLeesbareVoorwaarden($machine_leesbare_voorwaarden)
    {
        if (is_null($machine_leesbare_voorwaarden)) {
            throw new \InvalidArgumentException('non-nullable machine_leesbare_voorwaarden cannot be null');
        }


        $this->container['machine_leesbare_voorwaarden'] = $machine_leesbare_voorwaarden;

        return $this;
    }

    /**
     * Gets verrijking
     *
     * @return array<string,array<string,\OpenAPI\Client\Model\VerrijkingVoorwaardeOptieId[]>>|null
     */
    public function getVerrijking()
    {
        return $this->container['verrijking'];
    }

    /**
     * Sets verrijking
     *
     * @param array<string,array<string,\OpenAPI\Client\Model\VerrijkingVoorwaardeOptieId[]>>|null $verrijking verrijking
     *
     * @return self
     */
    public function setVerrijking($verrijking)
    {
        if (is_null($verrijking)) {
            throw new \InvalidArgumentException('non-nullable verrijking cannot be null');
        }
        $this->container['verrijking'] = $verrijking;

        return $this;
    }

    /**
     * Gets subsidiemaatregel
     *
     * @return string|null
     */
    public function getSubsidiemaatregel()
    {
        return $this->container['subsidiemaatregel'];
    }

    /**
     * Sets subsidiemaatregel
     *
     * @param string|null $subsidiemaatregel subsidiemaatregel
     *
     * @return self
     */
    public function setSubsidiemaatregel($subsidiemaatregel)
    {
        if (is_null($subsidiemaatregel)) {
            throw new \InvalidArgumentException('non-nullable subsidiemaatregel cannot be null');
        }
        $allowedValues = $this->getSubsidiemaatregelAllowableValues();
        if (!in_array($subsidiemaatregel, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'subsidiemaatregel', must be one of '%s'",
                    $subsidiemaatregel,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['subsidiemaatregel'] = $subsidiemaatregel;

        return $this;
    }

    /**
     * Gets publicatie_link
     *
     * @return \OpenAPI\Client\Model\Website|null
     */
    public function getPublicatieLink()
    {
        return $this->container['publicatie_link'];
    }

    /**
     * Sets publicatie_link
     *
     * @param \OpenAPI\Client\Model\Website|null $publicatie_link publicatie_link
     *
     * @return self
     */
    public function setPublicatieLink($publicatie_link)
    {
        if (is_null($publicatie_link)) {
            throw new \InvalidArgumentException('non-nullable publicatie_link cannot be null');
        }
        $this->container['publicatie_link'] = $publicatie_link;

        return $this;
    }

    /**
     * Gets metadata
     *
     * @return \OpenAPI\Client\Model\ProductMetadataJson|null
     */
    public function getMetadata()
    {
        return $this->container['metadata'];
    }

    /**
     * Sets metadata
     *
     * @param \OpenAPI\Client\Model\ProductMetadataJson|null $metadata metadata
     *
     * @return self
     */
    public function setMetadata($metadata)
    {
        if (is_null($metadata)) {
            throw new \InvalidArgumentException('non-nullable metadata cannot be null');
        }
        $this->container['metadata'] = $metadata;

        return $this;
    }

    /**
     * Gets verwante_producten
     *
     * @return \OpenAPI\Client\Model\ShaclOrderedVerwantProduct[]|null
     */
    public function getVerwanteProducten()
    {
        return $this->container['verwante_producten'];
    }

    /**
     * Sets verwante_producten
     *
     * @param \OpenAPI\Client\Model\ShaclOrderedVerwantProduct[]|null $verwante_producten verwante_producten
     *
     * @return self
     */
    public function setVerwanteProducten($verwante_producten)
    {
        if (is_null($verwante_producten)) {
            throw new \InvalidArgumentException('non-nullable verwante_producten cannot be null');
        }
        $this->container['verwante_producten'] = $verwante_producten;

        return $this;
    }

    /**
     * Gets deminimis
     *
     * @return bool|null
     */
    public function getDeminimis()
    {
        return $this->container['deminimis'];
    }

    /**
     * Sets deminimis
     *
     * @param bool|null $deminimis deminimis
     *
     * @return self
     */
    public function setDeminimis($deminimis)
    {
        if (is_null($deminimis)) {
            throw new \InvalidArgumentException('non-nullable deminimis cannot be null');
        }
        $this->container['deminimis'] = $deminimis;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


